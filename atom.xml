<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[蹤影]]></title>
  <link href="http://smlsunxie.github.com/atom.xml" rel="self"/>
  <link href="http://smlsunxie.github.com/"/>
  <updated>2012-12-19T12:38:44+08:00</updated>
  <id>http://smlsunxie.github.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Jekyll Liquid reference]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/19/Jekyll-liquid-reference/"/>
<updated>2012-12-19T08:59:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/19/Jekyll-liquid-reference</id>

      <content type="html"><![CDATA[<p>最近在用Jekyll為base的作一些靜態網站，他算是一個很輕省，並且可以快速完成網站的好工具，可以看看友站的介紹<a href="http://blog.lyhdev.com/2012/02/jekyll-github-pages.html">使用 Jekyll 與 GitHub Pages 架站</a>，幾個步驟並且使用免費的github就可以讓你有個網站的雛形，當然只有這樣還不夠，當你需要客製時，就必須要知道如何操作該工具運作，所以整理這篇，給大家參考，至少是個起頭方向。</p>

<p>為了避免浪費太多摸索時間，如果你有興趣想要使用這工具，建議大家先大概瀏覽一下下面的文件，有個印象後在去操作，整個才會比較速西(台語)～</p>

<ul>
<li>官方網站：<a href="http://liquidmarkup.org/">Liquid</a></li>
<li>wiki：<a href="https://github.com/mojombo/jekyll/wiki">Liquid wiki</a></li>
</ul>


<p>節錄幾個我覺得比較重要的章節</p>

<ul>
<li>markdown文檔檔頭的說明：<a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter">YAML Front Matter</a></li>
<li>各種參數讀取方式：<a href="https://github.com/mojombo/jekyll/wiki/Template-Data">Template Data</a></li>
<li><p>設計人員參考手冊：<a href="https://github.com/shopify/liquid/wiki/liquid-for-designers">Liquid for Designers</a></p>

<p>  包含比如說replace這樣替換字元的說明，還有一些常用的tag說明</p></li>
<li><p>開發人員參考手冊：<a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Programmers">Liquid for Programmers</a></p>

<p>  如果你有看我另一篇文章<a href="http://smlsun.com/blog/2012/11/29/octopress-slide-advanced-More/">More Advanced octopress with Slide Features</a>，裡面自定tag 與 block 的作法在這邊有詳細說明</p></li>
<li><p>Jekyll <a href="https://github.com/mojombo/jekyll/wiki/liquid-extensions">Liquid Extensions</a></p>

<p>  Jekyll 使用 Liquid 來處理 templates，這裡列出一些除了標準 Liquid 有提供的功能外，延伸的部份，比如說裡面有提到的 Post Url，可以用 <code>{% post_url 2010-07-21-name-of-post %}</code>取得文章連接。</p></li>
</ul>


<p>試試看，Jekyll Liquid 使用起來真的很方便，如果你要快速架站，這個工具可以幫上你的忙</p>

<h3>Have Fun!!</h3>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/19/Jekyll-liquid-reference/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[google api 的使用簡介-map & picasa]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/19/google-api/"/>
<updated>2012-12-19T08:20:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/19/google-api</id>

      <content type="html"><![CDATA[<p>最近剛好在做一個房仲網站，有用到 google map api，以及要動態嵌入picasa的圖片依據狀況改變圖片大小，找到一些參考資料，整理上來給大家參考</p>

<h2>google map</h2>

<h3>大家愛吃的泡麵版:</h3>

<ul>
<li><p>如果你要嵌入map地圖請參考下列網址</p>

<p>  <a href="http://support.google.com/maps/bin/answer.py?hl=zh-Hant&amp;answer=72644">在網站或網誌中嵌入地圖</a></p></li>
</ul>


<p>效果如下：</p>

<iframe width="640" height="480" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com.tw/maps?f=q&amp;source=s_q&amp;hl=zh-TW&amp;geocode=&amp;q=%E5%8F%B0%E5%8C%97%E5%B8%82%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;aq=&amp;sll=23.48575,119.49965&amp;sspn=8.347012,9.876709&amp;t=m&amp;brcurrent=3,0x3442a9b1907a9407:0x10fa075eccd0dd7c,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;ll=25.026428,121.512823&amp;spn=0.037331,0.054932&amp;z=14&amp;iwloc=A&amp;output=embed"></iframe>


<br /><small><a href="https://maps.google.com.tw/maps?f=q&amp;source=embed&amp;hl=zh-TW&amp;geocode=&amp;q=%E5%8F%B0%E5%8C%97%E5%B8%82%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;aq=&amp;sll=23.48575,119.49965&amp;sspn=8.347012,9.876709&amp;t=m&amp;brcurrent=3,0x3442a9b1907a9407:0x10fa075eccd0dd7c,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;ll=25.026428,121.512823&amp;spn=0.037331,0.054932&amp;z=14&amp;iwloc=A" style="color:#0000FF;text-align:left">檢視較大的地圖</a></small>


<p>簡單吧！感謝google大神～</p>

<h3>下面是給愛自己煮的geek:</h3>

<ul>
<li><a href="http://my-web-design.blogspot.tw/2007/09/google-maps-api.html">基本的使用介紹</a></li>
<li><p>如果你要嵌入地圖資訊可用下列網站產生</p>

<p>  <a href="http://www.solvium.de/static-map/">google map 嵌入網站程式碼產生器</a></p></li>
<li><p>如果要查詢所在位置的坐標可使用下列網址，之前在<a href="http://smlsun.com/blog/2012/12/06/ireport-map-component/">Introduction Ireport Component: Map 地圖</a>有介紹過</p>

<p>  <a href="http://www.agenciacreativa.net/coordenadas_google_maps.php">座標查詢網址</a></p></li>
<li><p>更詳細的使用說明可以參考官方文件說明</p>

<p>  <a href="https://developers.google.com/maps/documentation/javascript/?hl=zh-TW">官方google map api 文件</a></p></li>
</ul>


<h2>google picasa</h2>

<h3>大家愛吃的泡麵版：</h3>

<p>如果你要分享picasa上面的影像可以參考下列網址操作</p>

<ul>
<li><a href="https://support.google.com/picasa/answer/66969/?hl=zh-Hant&amp;">內嵌相簿、圖片和投影播放</a>，效果如下
<embed type="application/x-shockwave-flash" src="https://picasaweb.google.com/s/c/bin/slideshow.swf" width="800" height="533" flashvars="host=picasaweb.google.com&hl=zh_TW&feat=flashalbum&RGB=0x000000&feed=https%3A%2F%2Fpicasaweb.google.com%2Fdata%2Ffeed%2Fapi%2Fuser%2F114562460176368030377%2Falbumid%2F5810278785625170577%3Falt%3Drss%26kind%3Dphoto%26authkey%3DGv1sRgCIqtvMXakpDcSw%26hl%3Dzh_TW" pluginspage="http://www.macromedia.com/go/getflashplayer"></embed></li>
</ul>


<p>差就差在是用flash作的，如果你不 care iphone的用戶(沒有flash)，這應該可以幫你節省維護照片(以資料夾為單位)，以及將照片放在web site的時間(複製連接)，picasa就可以很方便管理你的照片，</p>

<h3>更正：原來有人提出iphone，使用picasa slide 的解決方案了如下：</h3>

<h4><a href="http://www.jaillon.com/blog/2010/06/04/how-to-make-picasa-flash-based-slideshow-iphone-friendly/">How to make Picasa flash-based slideshow iPhone-friendly</a></h4>

<p>加入下面js code 就可以解決，wow～ 我不想自己煮了！哈哈</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">language</span><span class="o">=</span><span class="nx">javascript</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">if</span><span class="p">((</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/iPhone/i</span><span class="p">))</span> <span class="o">||</span> <span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/iPod/i</span><span class="p">))</span> <span class="o">||</span> <span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/iPad/i</span><span class="p">)))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="err">‘</span><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="err">”</span><span class="p">[</span><span class="nx">URL</span> <span class="nx">to</span> <span class="nx">slideshow</span> <span class="nx">link</span><span class="p">]</span><span class="err">“</span><span class="o">&gt;&lt;</span><span class="nx">img</span> <span class="nx">src</span><span class="o">=</span><span class="err">”</span><span class="p">[</span><span class="nx">URL</span> <span class="nx">to</span> <span class="nx">an</span> <span class="nx">image</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">slideshow</span><span class="p">]</span> <span class="nx">width</span><span class="o">=</span><span class="err">”</span><span class="mi">600</span><span class="err">″</span> <span class="o">/&gt;&lt;</span><span class="err">/a&gt;’);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="err">‘</span><span class="p">[</span><span class="nx">Code</span> <span class="nx">provided</span> <span class="nx">by</span> <span class="nx">Picasa</span> <span class="o">-</span> <span class="nx">Click</span> <span class="nx">on</span> <span class="s2">&quot;Embed Slideshow&quot;</span> <span class="nx">link</span><span class="p">]</span><span class="err">‘</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>geek最愛的自己煮版：</h3>

<ul>
<li><p>用restful的方式來操作圖片的產生，如果你是要用html5 image slide 這就很好用，你不會想要原始大小跟縮圖都自己重覆貼連結的</p>

<p>  <a href="http://akr.tw/2012/04/picasa-url-parameters/">Picasa（Google+）圖片外連的 URL 參數整理</a></p></li>
</ul>


<hr />

<p>其實只要善用網路上的工具真的可以節省很多時間，使用起來也不麻煩，甚至出奇的簡單，只是不知道而已，網路的世界需要大家一起探索，如果有不錯的工具，也別忘了推薦給大家，let me know,OK!</p>

<p>最後還是要感謝google，幫我節省這麼多時間，雖然我沒有像google那麼神通廣大，希望能幫助到來參觀的讀者囉！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/19/google-api/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[態度的重要-從倫敦計程車司機的專業來看]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/18/london-taxi/"/>
<updated>2012-12-18T07:52:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/18/london-taxi</id>

      <content type="html"><![CDATA[<iframe width="420" height="315" src="http://www.youtube.com/embed/wkQ7wT0xWdM" frameborder="0" allowfullscreen></iframe>


<p>今天看了discovery的生活大解密，講的是倫敦計程車，在台灣我們會認為計程車有什麼好了解的，印象中，台灣的計程車運將，橫衝直撞，為了載客，可以從外線直接切內線，常常讓人覺得驚險萬分，甚至可能為了多賺點錢，帶你繞遠路，當然也不是每個計程車司機都是這樣，但確實也還有改善空間。與台灣計程車司機滿街跑，執照很好拿的情況，倫敦的考照難度可能比大學考試或公職考試難上許多。</p>

<p>怎麼說呢，簡單來講，倫敦的計程車司機是必須成為google地圖，你就知道有多難了！首先必須要知道都市裡的每條道路，甚至是小徑，在倫敦就有兩萬五千多條路，還要知道可能載客的地點，意思是他要知道所有的酒館，以及飯店位置，聽到這有沒有覺得頭昏眼花了，這是多麼寵大的資料，在台灣很難想像可以這樣要求計程車司機，在倫敦的司機卻有這樣的超能力，實在讓人敬畏三分！</p>

<p>當然不只是記路名，要通過考試，拿到執照，在作為人體google地圖的倫敦計程車司機，還要具備更smart的功能，那就是人體導航！到目的地還不夠，還要是最短路徑，如果不是就無法通過，必須將資料處理過後進而成為有用得知識，又再一次讓我佩服的五體投地。</p>

<p>除了專業知識，倫敦的計程車也被要求需要有禮貌，如果沒有禮貌同樣的也無法通過拿到執照，從這件事也讓我體悟到，外國人對於計程車這樣我們認為比較低階的工作都能要求這樣的專業度，也因此在倫敦，他們的計程車司機是那麼的值得尊敬，實在值得我們學習。</p>

<p>最後，從這個節目我所體悟到的心得與大家分享</p>

<ul>
<li>先尊重自己專業，別人才會尊重你</li>
<li>要改變別人的看法，需要先改變自己</li>
<li>工作沒有貴賤，只要認真看待你的工作，每個工作都是高尚的</li>
<li>作事應該是更加俐落，計程車司機能，還有什麼不能</li>
<li>有些時候一些不必要但是極度專業的堅持，會讓你成就不一樣的事業</li>
<li>態度真的會決定你的高度</li>
</ul>


<p>ps. 台灣的官員應該要去考察一下，外國人的作事態度是需要我們學習的</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/18/london-taxi/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[從東西方宗教來看東西方差異]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/16/about-east-west-religion/"/>
<updated>2012-12-16T00:15:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/16/about-east-west-religion</id>

      <content type="html"><![CDATA[<p>上週因為朋友的生日，讓我有機會體驗一下基督教的教友，過程中讓我有感而發，因此有這篇文章</p>

<p>基督教給人的關懷是直接的，不像東方文化的含蓄，愛的表達也是很自然的，即使是東方人，可以很真實的接受到透過人所傳達的神的關懷，一個簡單的擁抱與接觸，那溫暖是真實的，並且對於別人心理困擾的事，雖然不一定能幫的上忙，但是會給你信心以及正面的話語，在我印象中遇到的外國人對於任何事態度都是正面的，一開始覺得實在不可思議，現在我也能夠理解</p>

<p>傳統的東方父母可能總會有負面的看法，也讓小孩子害怕嘗試一些新的事務，在擔心失敗的情況下，自然就不會有創新的突破，時有所聞周遭的朋友有這樣得情形，另一方面來看沉默是金讓我們不想表達，長輩的責罵讓我們不敢發言，這也是我覺得需要警惕的，沒有壓力的環境，以及足夠的犯錯的空間，是創新最好的朋友！</p>

<p>另一方面，過程中也讓我了解到為什麼外國人這麼會表達自己，在上課時這麼踴躍發表，在教友的聚會中，他們的禱告，是很具體的，會把他們心中的影像講出來，我覺得這是個很好的學習，以我自己而言，我實在很不會說故事，我要更加練習表達自己的感受，以及將我想講的更具體的表達出來。</p>

<p>當然我還是要強調，並不是外國的月亮比較圓，我以東方人為榮，作為新時代的青年，成長就要學習各方的優點，我生在台灣，接受傳統東方教育，但慶幸我的父母給我們自由發揮的空間，雖然不是頂尖人才，但有開放心胸，只要是好的都值得我們去學習，也與大家分享我的心得～</p>

<p>再一次感謝給我信心與關懷的人，即使我們才第一次見面；無論是哪種宗教，只要使人向善都是值得信仰與尊重的！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/16/about-east-west-religion/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[關於產業會議的15K]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/13/news-15k/"/>
<updated>2012-12-13T10:07:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/13/news-15k</id>

      <content type="html"><![CDATA[<p>真的不要再模糊焦點了，大家請仔細看清楚</p>

<p><a href="http://www.ettoday.net/news/20121212/139079.htm">15K不是重點！產業會議：開放勞工超時加班、增加派遣</a></p>

<p>還記得我之前發的</p>

<p>「如果你不夠謹慎，報紙會讓你痛恨那些正在被壓迫的人們，同時愛戴那些正在施暴的壓迫者。」</p>

<p>就是指這回事，他媽的拿別人的聲譽來模糊焦點，這算什麼！？</p>

<p>很奇怪耶！這事情還有陳為廷事件，都是因為對政府不滿，所以情緒不好的發言被作文章，所以得到一個教訓，雖然最近大家都很不爽，如果要討論或是揭發一些事，一定一定要淡定但堅持的討論，不然又有哪個記者在那模糊焦點。</p>

<p>雖然我很不喜歡看新聞，要是以前我一定會算了，這社會不就這樣，但是如果知道真相，但是又不去散布真正的事實，那不就謊言滿天飛，現在資訊發達，轉發很簡單，但請不要隨便轉發，不論好壞正確的事才值得宣傳。正所謂僅言慎行，請對自己的轉發與言論要更有責任感！如果不這麼做，那就不要怨嘆現在的社會，因為那都是你我一點一滴造成的！！</p>

<p>話又說回來，不然來弄個真相新聞網，專門收集不實的新聞，正確事實發生經過，內容不作評論，只整理經過與事實，哈哈～</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/13/news-15k/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[關於寫作]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/10/about-write/"/>
<updated>2012-12-10T17:35:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/10/about-write</id>

      <content type="html"><![CDATA[<p>最近開始有寫作的習慣，漸漸讓我思考關於寫作這件事，
我其實不是個很有梗的人，但是我覺得寫作可以幫助我：</p>

<ul>
<li>把我的思緒整理清楚，表達我所要表達的，我想這是我們台灣人，也許是中國人所缺少的，表達自己的意見</li>
<li>學習思考的更周詳，能夠更快理解事物，</li>
<li>想辦法把複雜的事說明的更簡單，讓別人理解你的想法</li>
<li>當你思考的更快，就可做更多事情，做起事來就會有效率，</li>
<li>會表達自己的意見，才有可能改變環境</li>
<li>還有很多好處，可參考 <a href="http://caterpillar.onlyfun.net/Gossip/StudyGossip/writing.html">寫作之用與趣</a></li>
</ul>


<p>我想下面是關於大家常常遇到的問題，也是我的親身體驗與轉變</p>

<ul>
<li>覺得寫作是浪費時間，之前我會這麼想</li>
<li>覺得沒有時間寫作，之前我也是這麼想</li>
<li>覺得寫作很麻煩，之前我還是這麼想</li>
</ul>


<p>但是！透過一些工具，以及練習，以前困擾我的都一一被解決，現在我喜愛寫作，因為一些阻礙我寫作的原因消失了，更加練習表達讓我的心思能夠更流暢的被表達出來，當你會思考，才有可能持續改善你周遭的環境。</p>

<p>讓寫作的阻礙降到最低，下面是我認為讓寫作更流暢的方法</p>

<ol>
<li>一個好鍵盤，利其器才能善其事</li>
<li>使用markdown，讓你可以快速寫作的而不用在乎排版，包括圖片以超連結都可以很方便使用</li>
<li>使用octopress可以很方便可以將你的文章發佈至網路上</li>
</ol>


<p>上面的工具，可能不多人知道，因為對於資訊的大量讀取與處理的活動中，發展出一套非常方便得工具組，推薦給大家，寫作的興趣是需要培養的，試著寫幾篇看看，不用太長，當做在寫日記一樣，你也會喜歡上，並享受這樣的過程。</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/10/about-write/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Otcopress + warp bootstrap + deck.js]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/10/otcopress-warp-bootstrap-deckjs/"/>
<updated>2012-12-10T12:19:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/10/otcopress-warp-bootstrap-deckjs</id>

      <content type="html"><![CDATA[<p>隆重為大家推出，我所完成的 Otcopress theme</p>

<h2>Otcopress + warp bootstrap + deck.js</h2>

<p>就如同大家看到的這個website，幾個特性如下：</p>

<ul>
<li>保留 Otcopress 特色，包括程式碼hightlight 特性</li>
<li>支援 markdown with deck.js slide，使用方法請參考我另一篇文章<a href="http://smlsun.com/blog/2012/11/29/octopress-slide-advanced-More/">More Advanced octopress With Slide Features</a></li>
<li>支援bootstrap，習慣使用 bootstrap 的有福了！</li>
<li>佈景套用 warp bootstrap，主題為magnus，若要自行更換warp bootstrap主題應該會簡單一些</li>
</ul>


<h2>使用slides 注意事項</h2>

<ul>
<li>markdown 的檔案位置為 ./source/slides</li>
<li>./source/slides index.markdown 目前需自行新增連結項目</li>
<li>在 ./source/slides 底下的markdown 皆會自動轉換為html</li>
<li>可以參考 theme的 sample slide.markdown</li>
<li>新增slides可使用 <code>rake new_sildes</code></li>
</ul>


<h2>安裝方式</h2>

<ul>
<li>請參考我的 github <a href="https://github.com/smlsunxie/bootstrapDeck.js">bootstrapDeck.js</a></li>
</ul>


<p>從這件事讓我學到，自己要用很簡單，要讓大家用很多細節不得不注意了～</p>

<p>ps. 後續會在補英文說明，希望可以有外國人喜歡～</p>

<h3>打完休息…</h3>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/10/otcopress-warp-bootstrap-deckjs/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[關於陳為廷事件]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/08/times-chan/"/>
<updated>2012-12-08T23:35:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/08/times-chan</id>

      <content type="html"><![CDATA[<p>最近看了清大生的新聞讓我有感而發，不論對做，但我覺得他很有勇氣，要對一個人沒禮貌，有兩種情形，一個是忍無可忍，一個是講話沒水準，我想陳同學是忍無可忍的狀況，我想現在這環境，應該也有很多忍無可忍的人，但是誰有勇氣站出來說話，試著套論改善的方式，而是得過且過，在媒體的壓力下，做這麼激烈的動作，設身處地的想一下，那需要多大的勇氣，需要怎樣的 才可以讓他做出這樣的舉動。</p>

<p>我想我也是那個不出聲音的人，陳同學的勇氣是需要學習的，以前我沒有做到，但我現再要練習這麼做，表達我的意見，我的感覺，抒發也好，所以我想寫這篇文章。</p>

<p>如果你也是身在這個地方的人，請停止唱衰，除非你有勇氣像陳同學一樣，不然不要在那邊說風涼話。</p>

<p>另外之前有看到一篇文章，有一句話我覺得很棒！與大家分享～</p>

<blockquote><p>「如果你不夠謹慎，報紙會讓你痛恨那些正在被壓迫的人們，同時愛戴那些正在施暴的壓迫者。」
～Malcolm X</p></blockquote>

<p>提醒我們，做一個智者，不要被謠言左右，眼見為憑，小心求證！做一個公正的人，而不是有顏色的人。</p>

<p>文後附上<strong>完整的影片</strong>，至於對錯，請自行評斷～</p>

<p><a href="http://www.youtube.com/watch?v=tHA7QEgnTbY">陳為廷轟教長！　15分鐘完整交鋒過程</a></p>

<p><a href="http://www.nexttv.com.tw/news/realtime/latest/10523520">陳為廷為「發言態度」道歉　盼勿模糊焦點</a></p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/08/times-chan/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ireport use qrcode]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/07/ireport-use-qrcode/"/>
<updated>2012-12-07T10:41:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/07/ireport-use-qrcode</id>

      <content type="html"><![CDATA[<p>其實這篇才是最後的目的，讓我們回顧一下系列文章：</p>

<ul>
<li><p><a href="http://smlsun.com/blog/2012/12/06/agile-java-with-gradle/">Agile Java With Gradle: 使用 Gradle 快速開發 Java</a></p>

<p>  利用gradle 快速開發java，並且包成jar，所要做的就是下一篇文章scriptlet 會用到的jar</p></li>
<li><p><a href="http://smlsun.com/blog/2012/12/06/ireport-use-scriptlet/">Ireport Use Scriptlet</a></p>

<p>  說明如何引入自己寫的class在ireport可以使用</p></li>
</ul>


<p>最後所有做的就是</p>

<h2>ireport 產生 QRCode</h2>

<p>So，之前兩篇文章把一些細節都說明過了，就直接進入重點吧！</p>

<p>參考這篇文章</p>

<p><a href="http://stackoverflow.com/questions/7626013/google-zxing-barcode-generator-in-ireport">google-zxing-barcode-generator-in-ireport</a></p>

<p>把第二篇的javacode改寫後，程式碼如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">smlsun</span><span class="o">.</span><span class="na">ireport</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.zxing.BarcodeFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.zxing.WriterException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.zxing.common.BitMatrix</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.zxing.qrcode.QRCodeWriter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.zxing.client.j2se.MatrixToImageWriter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JRDefaultScriptlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JRScriptletException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">QRCodeScriptlet</span> <span class="kd">extends</span> <span class="n">JRDefaultScriptlet</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterDetailEval</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">JRScriptletException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">QRCodeWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">QRCodeWriter</span><span class="o">();</span>
</span><span class='line'>        <span class="n">BitMatrix</span> <span class="n">matrix</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">matrix</span> <span class="o">=</span> <span class="n">writer</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">getFieldValue</span><span class="o">(</span><span class="s">&quot;ORDERID&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">(),</span> <span class="n">BarcodeFormat</span><span class="o">.</span><span class="na">QR_CODE</span><span class="o">,</span> <span class="mi">256</span><span class="o">,</span> <span class="mi">256</span><span class="o">);</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">setVariableValue</span><span class="o">(</span><span class="s">&quot;BarCodeImage&quot;</span><span class="o">,</span> <span class="n">MatrixToImageWriter</span><span class="o">.</span><span class="na">toBufferedImage</span><span class="o">(</span><span class="n">matrix</span><span class="o">)</span> <span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">WriterException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>不多說了，重點如下：</p>

<ul>
<li>需要用的套件與版本，請參考 <a href="http://smlsun.com/blog/2012/12/06/agile-java-with-gradle/">Agile Java With Gradle: 使用 Gradle 快速開發 Java</a> 的gradle.build，其中 <code>com.google.zxing</code> 主要是要用來產生QRcode</li>
<li>將你要轉換成QRcode 的文字傳入，此範例用的是 Field ORDERID</li>
<li>同樣將處理結果塞到 ireport的 Variable，此範例命名為 BarCodeImage</li>
<li>在此 Variable 的型別為 BufferedImage</li>
</ul>


<p>回到ireport，我們同樣要進行 <a href="http://smlsun.com/blog/2012/12/06/ireport-use-scriptlet/">Ireport Use Scriptlet</a> 中，ireport的設定，其中不一樣的是：</p>

<ul>
<li>Variable 的 type 要改成 java.awt.image.BufferedImage</li>
<li>然後原本用的是text field 改成用 Image</li>
<li>Image的type 改成 java.awt.Image</li>
</ul>


<p>上面都處理好，就可以來看結果了</p>

<p><img src="https://lh5.googleusercontent.com/-XWqDIn7kLFs/UMFcwQZq9MI/AAAAAAAALXg/PTyLE0dmsLk/s640/ireport%2520qrcode.jpg" alt="qrcode" /></p>

<p>DONE!!如果有此需求，趕快動手做做看囉～</p>

<h3>請搭配我的github project 服用～</h3>

<blockquote><p><a href="https://github.com/smlsunxie/ireport-qrcode">ireport-qrcode github</a></p></blockquote>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/07/ireport-use-qrcode/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ireport use scriptlet]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/06/ireport-use-scriptlet/"/>
<updated>2012-12-06T20:00:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/06/ireport-use-scriptlet</id>

      <content type="html"><![CDATA[<p>在開始之前請容許我發洩一下：</p>

<p>ireport 的文件真他媽的少阿!</p>

<p>希望透過這篇文章，能幫助大家節省一些時間，其實scriptlet很強大</p>

<p>知道原理後之後就很簡單了，你可以輕易的讓ireprt中的資料交由自己寫的class進行處理，與ireport的互動將更加容易</p>

<p>只是沒有文件說明他怎麼用，以致沒有人了解他</p>

<p>開始我們的正題</p>

<h2>如何使用 ireport scriptlet</h2>

<p>先來看看java code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">smlsun</span><span class="o">.</span><span class="na">ireport</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JRDefaultScriptlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JRScriptletException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestScriptlet</span> <span class="kd">extends</span> <span class="n">JRDefaultScriptlet</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterDetailEval</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">JRScriptletException</span> <span class="o">{</span>
</span><span class='line'>       <span class="k">this</span><span class="o">.</span><span class="na">setVariableValue</span><span class="o">(</span><span class="s">&quot;titleAddOrderid&quot;</span><span class="o">,</span> <span class="s">&quot;test Scriptlet ORDERID:&quot;</span><span class="o">+</span><span class="n">getFieldValue</span><span class="o">(</span><span class="s">&quot;ORDERID&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">()</span> <span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>java部分</h3>

<p>重點如下：</p>

<ul>
<li>需要注意的是需要 <code>extends JRDefaultScriptlet</code></li>
<li>接著你需要實作 JRDefaultScriptlet 裡的介面，此範例實作afterDetailEval，也就是當detal band畫完之後進行處理</li>
<li>透過 getFieldValue 來取得報表中有的欄位值進行處理，此範例只是加上一些字串而已</li>
<li>處理好的值塞到ireport 事先定義好的Variable，透過 setVariableValue</li>
<li>將寫完的java 打包成jar，可以看我上一篇文章 <a href="http://smlsun.com/blog/2012/12/06/agile-java-with-gradle/">gradle</a> 快速完成！</li>
</ul>


<p>java部分大概就是這樣了~</p>

<hr />

<h3>接著回到ireport</h3>

<p>需要處理的重點如下：</p>

<ul>
<li>將打包好的jar加入到ireport的classpath</li>
<li>在你要使用的報表將寫好的class name加到scriptlets，記得要連package</li>
<li>將Variable建好，需要與class裡定義的一樣，此例需命名為 titleAddOrderid</li>
<li>新增一個text field 將Expression 填入建好的 $v{titleAddOrderid}</li>
</ul>


<p>OK啦～如此一來就算完成讓ireport 使用 scriptlet，沒圖沒真相，結果如下：</p>

<p><img src="https://lh6.googleusercontent.com/-aK45tf5w6U8/UMFWA9BRnhI/AAAAAAAALXU/WYeH7MHoSh8/s640/testIreportScriptlet.jpg" alt="testIreportScriptlet" /></p>

<p>其實真的不難，做過一次就知道了，就是因為文件少，不知從何開始，希望能幫幫ireport苦惱的人～</p>

<p>最後再補上，別人錄的 step by step 影片，他是用 image當例子，跟本範例用string原理是一樣的</p>

<p><a href="http://ireport-tutorial.blogspot.tw/2008/11/show-blob-image-in-ireport.html">show-blob-image-in-ireport</a></p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/06/ireport-use-scriptlet/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[agile java with gradle: 使用 gradle 快速開發 java]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/06/agile-java-with-gradle/"/>
<updated>2012-12-06T18:04:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/06/agile-java-with-gradle</id>

      <content type="html"><![CDATA[<p>以我過往開發java的經驗，總是離不開eclipse，每次要開發新專案，總是要設置一次eclipse的classpath</p>

<p>不然就是共同開發時，可能因為夥伴沒有上傳相依套件，造成編譯失敗</p>

<p>又或者自己去找缺的套件，好死不死版本不對造成程式異常</p>

<p>種種開發java遇到的問題總是困擾著我，又因為這樣浪費的很多時間～</p>

<hr />

<p>怎麼辦！？介紹大家一帖好藥</p>

<h2>Gradle</h2>

<p>之前就有介紹過他，請看我的<a href="http://smlsun.com/slides/java-with-node.html">slide</a></p>

<p>今天在開發一個小程式，索性就不用eclipse，也不去網路上下載套件，將程式寫好後放到gradle的編譯路徑</p>

<p>然後編輯build.gradle，內容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="nl">group:</span> <span class="s1">&#39;com.google.zxing&#39;</span><span class="o">,</span> <span class="nl">name:</span> <span class="s1">&#39;javase&#39;</span><span class="o">,</span> <span class="nl">version:</span> <span class="s1">&#39;2.1&#39;</span>
</span><span class='line'>    <span class="n">compile</span> <span class="nl">group:</span> <span class="s1">&#39;net.sf.jasperreports&#39;</span><span class="o">,</span> <span class="nl">name:</span> <span class="s1">&#39;jasperreports&#39;</span><span class="o">,</span> <span class="nl">version:</span> <span class="s1">&#39;5.0.0&#39;</span>
</span><span class='line'>    <span class="n">compile</span> <span class="nl">group:</span> <span class="s1">&#39;com.lowagie&#39;</span><span class="o">,</span> <span class="nl">name:</span><span class="s1">&#39;itext&#39;</span><span class="o">,</span> <span class="nl">version:</span><span class="s1">&#39;2.1.7&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到我用到三個套件，分別是javase，jasperreports以及itext，如果你要查套件對應的group以及version可上下列網址查詢：</p>

<p><a href="http://search.maven.org/">maven Central Repository</a></p>

<p>輸入你要找的套件名稱，就會列出相關的資訊。</p>

<p>接著我們只要在Terminal鍵入下列指令：</p>

<p><code>gradle build jar</code></p>

<p>gradle 就會進行 java compile，並且把熱熱的class馬上幫你包成jar讓你吃，ㄜ，不是！是讓你用～</p>

<p>就是這麼簡單，如果你還很嫩，離不開eclipse，別擔心，一句指令讓你使用IDE!</p>

<p><code>gradle eclipse</code></p>

<p>這時候gradle會根據你設定的 dependencies 幫你把classpath建好，方便吧！</p>

<p>剛剛提到多人開發，缺套件，或者抓錯版本的問題將一去不復返，任何人拿到程式碼，編譯出來的東西都會是一樣，將不再有缺套件沒辦法編譯的問題，可以輕省快速的開發java，以及處理繁瑣的編譯包jar步驟，更快的驗證寫出來的程式，正是敏捷開發的精神!</p>

<p>如何？還不趕快試試看阿！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/06/agile-java-with-gradle/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[introduction ireport component: Map 地圖]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/06/ireport-map-component/"/>
<updated>2012-12-06T15:15:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/06/ireport-map-component</id>

      <content type="html"><![CDATA[<p>今天來為大家介紹 ireport 的新元件</p>

<h2>Map component</h2>

<p>此Map不是java.util.Map，是google Map 的Map 不要搞錯了喔！</p>

<p>不然各位還以為我在廢話，java.util.Map 哪需要我介紹～</p>

<p>就在 11月底的時候 ireport release 5.0</p>

<p>我就想說來看看他多了什麼功能，畢竟我從 2.0一路用上來</p>

<p>到了5字頭，來看看有什麼新的玩意，查了一下 <a href="http://sourceforge.net/projects/ireport/files/iReport/iReport-5.0.0/">changelog</a>，重點是下列兩項：</p>

<ul>
<li>Full support for JasperReports 5.0.0</li>
<li>Improved map component</li>
</ul>


<p>試了一下，使用起來不會太難，幾個比較做要的參數可以參考官方的範例</p>

<p><a href="http://jasperreports.sourceforge.net/sample.reference/map/index.html">JasperReports - Map Component Sample (version 5.0.0)</a></p>

<p>其中，此元件需要輸入的是座標，可以下下列網址查你要的地址</p>

<p><a href="http://www.agenciacreativa.net/coordenadas_google_maps.php">座標查詢網址</a></p>

<p>接著，要記得設置zoom 的參數，讓你的地圖可以看到比較詳細的街道，可以看一下我完成的範例如下</p>

<p><img src="https://lh6.googleusercontent.com/-vpj2Wl0Tqsw/UMBQ4pGbobI/AAAAAAAALXE/UJrkevqrC58/s640/ireport%2520map.jpg" alt="img" /></p>

<p>不錯吧！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/06/ireport-map-component/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Reading experience:Being Geek 晉升怪傑]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/03/reading-experience-being-geek/"/>
<updated>2012-12-03T08:22:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/03/reading-experience-being-geek</id>

      <content type="html"><![CDATA[<p>從書名來看<strong>Being Geek 晉升怪傑</strong>，直覺會認為是如何成為一個技術高超的程式人員，但本書所要闡釋的是，怪傑不只技術高超，有很多面相的總和才叫作怪傑，基本上就是一個全能以及處變不驚的人；對於求知的慾望是無窮無境的，也要是一個很強的溝通者、危機處理者，以及決策者；既然怪傑必須處理這麼多困難得事，該如何處理也是很重要的；所以不管是否要成為怪傑只要你有下列的困擾，那我建議你來看這本書：</p>

<ul>
<li>如果最近你有離職的打算，該如何評估你的決定是不是對的</li>
<li>既然有離職，書中也有說明如何面試，面對不同類型面試者的應對方式</li>
<li>對於你的新職涯，如何注意該爭取的福利</li>
<li>若你有在團隊管理，如何讓兩個不對盤的人可以互相理解，並且培養默契</li>
<li>若你是被管理者，如何向上管理你的主管，還有你應該從主管身上學到什麼</li>
<li>對於敵人的應對方式</li>
<li>如何面對不可能的任務</li>
<li>面對危機時應該如何處理</li>
<li>如何找到與辨識你的貴人</li>
<li>如何聘請人員</li>
<li>如何管理在家工作的人</li>
<li>對於生產活動，有哪些推薦的軟體</li>
<li>如果你有另一半，該如何讓他了解身為怪胎的行為，並且能夠有心理準備。(個人覺得很棒的章節，我已經有給我老婆看了，哈)</li>
<li>當你身為管理職時，如何在<strong>處理危機</strong>與<strong>創造</strong>之間平衡</li>
<li>該如何進行簡報</li>
<li>剛要從工程師轉換為管理職的人；一些建議以及心理建設，告訴你如何看待與觀察這樣的轉變，並且當你身處這樣的過程時，如何察覺，以及該如何適應與處理管理職的工作（以我個人而言，可以說是相見恨晚阿！)</li>
<li>如何正確的進行決策</li>
<li>若你想落實一些你想學習或想做的事的方法：<strong>涓滴清單</strong></li>
<li>如何評估你的下一個事業</li>
</ul>


<p>如何？是否也切中你的要害，或者你正有這些困惱？那趕快去買來看吧！</p>

<p>以Geek為目標並且加上lean的思維，避免不不必要的浪費才能更快達到目標</p>

<p>看書，也是增長知識的方式，透過正確的的讀物與內容，可以幫你節省很多不必要的麻煩與浪費的時間</p>

<p>現在，就讓我們開始，並且持續下去～</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/03/reading-experience-being-geek/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[MAC APP : Better Touch tool-Free Window Snapping]]></title>
<link href="http://smlsunxie.github.com/blog/2012/12/01/mac-app-better-touch-tool-free-window-snapping/"/>
<updated>2012-12-01T09:50:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/12/01/mac-app-better-touch-tool-free-window-snapping</id>

      <content type="html"><![CDATA[<p>相信使用過windows 7，或著最近的ubuntu都有用過 Window Snapping功能，也就是：</p>

<ul>
<li>把視窗移至四角，會自動將視窗縮放為 1/4</li>
<li>若移至上邊會自動放大</li>
<li>若移至左右兩邊會自動將視窗縮放為1/2</li>
</ul>


<p>之前再找相關的 MAC APP 時，有使用過兩款</p>

<ul>
<li><a href="https://itunes.apple.com/us/app/moom/id419330170?mt=12">moom</a></li>
<li><a href="http://mizage.com/divvy/">divv</a></li>
</ul>


<p>這兩款再進行window Snapping時是需要搭配快速鍵，使用上比較不直覺，且是需要收費的，今天介紹的這一款同樣是，</p>

<h3>for FREE !!</h3>

<h2>Better Touch tool</h2>

<p>他有什麼特別的呢？除了一開始所說的winddow sanpping 之外，預覽如下：</p>

<p><img src="http://a869.phobos.apple.com/us/r1000/084/Purple/v4/b9/2e/e5/b92ee55d-f407-fff9-a01f-919771e0dc4c/mzl.bodvlkcq.800x500-75.jpg" alt="Screenshot 1" /></p>

<p>他還可以定義很多自定義的觸控面板手勢，可以讓你把喜歡的手勢加入</p>

<p>比如說，如下圖，圖片來源為 <a href="http://mulicia.pixnet.net/">mulicia.pixnet.net</a>：</p>

<p><img src="http://pic.pimg.tw/mulicia/06fffa4bce61b70ff703d18c6790cc66.png" alt="img" /></p>

<p>可以針對全域定義你常用的功能手勢</p>

<p><img src="http://pic.pimg.tw/mulicia/bd1b4f661061b3677fed6f241b60a3d5.png" alt="img" /></p>

<p>也可以針對特定程式進行定義</p>

<p>如此一來你就能更方便操作你的mac，更加彈性的定義每個手勢！</p>

<p>下面就是官方網站與載點啦：</p>

<ul>
<li><a href="http://www.boastr.de/">Better Touch tool</a></li>
<li><a href="http://www.boastr.de/BetterTouchTool.zip">Download</a></li>
</ul>


<p>試試看囉！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/12/01/mac-app-better-touch-tool-free-window-snapping/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[MAC APP：XtraFinder - free tabs finder]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/29/mac-app-introduction-xtrafinder/"/>
<updated>2012-11-29T16:42:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/29/mac-app-introduction-xtrafinder</id>

      <content type="html"><![CDATA[<p>來介紹與推薦一個不錯的MAC APP！</p>

<p>most important is it</p>

<h3>for FREE !!</h3>

<p>廢話不多說先來看看原本的finder，與XtraFinder</p>

<p><img src="https://lh4.googleusercontent.com/-8dcqlVP0Zec/ULgEhBOHftI/AAAAAAAALWs/m-_X8WmqOWU/s640/Xtrafinder.jpg" alt="Xtrafinder" /></p>

<p><img src="https://lh6.googleusercontent.com/-jBUV6yVtmn8/ULgEgNVpQgI/AAAAAAAALWI/Z5Y_YMoZfoE/s640/finder.jpg" alt="finder" /></p>

<p>很明顯的！我們可以看到幾點不同</p>

<ul>
<li>tab 支援</li>
<li>合併 tab &lt;- 這個個人覺得很強大阿</li>
<li>還有還有，他可以 <strong>剪下</strong>，也就是 command+x，酷吧！省 7.99 元美金喔！這網址-><a href="https://itunes.apple.com/us/app/moveaddict/id404213171?ls=1&amp;mt=12">moveAddict</a></li>
</ul>


<p>簡單介紹一下怎麼合併tab，只要在你要合併的tab上點兩下，他就會將下一個頁籤合併，若沒有下一個頁籤，那他就會新增一個同樣位置的tab，如果要取消合併也只要同樣的在合併頁籤點兩下即可，酷吧！就是這個簡單。</p>

<p>另外還有下列功能：</p>

<ul>
<li>高反差顯示finder內容，如下圖：</li>
</ul>


<p><img src="https://lh5.googleusercontent.com/-o2qn8GMIPJc/UM_uj4qGlEI/AAAAAAAALX4/b9pB34nyawk/s912/Xtrafinder%2520Light%2520text.jpg" alt="img" /></p>

<ul>
<li>顯示隱藏檔：</li>
</ul>


<p><img src="https://lh4.googleusercontent.com/-w0s2qW4sWr0/UM_upsIWNtI/AAAAAAAALYA/M3Mad0Qp20A/s912/Xtrafinder%2520show%2520hidden%2520files.jpg" alt="img" /></p>

<h2>還有很多功能</h2>

<p><img src="https://lh5.googleusercontent.com/-CgPk2ukwPZY/ULgHDjbSK-I/AAAAAAAALWg/MuSlUgU0swk/s512/Xtrafinder%2520features.jpg" alt="features" /></p>

<p>就留給各位去發掘啦～</p>

<p>下面是官方網站與下載點：</p>

<ul>
<li><p><a href="http://www.trankynam.com/xtrafinder/">website</a></p></li>
<li><p><a href="http://www.trankynam.com/xtrafinder/downloads/XtraFinder.dmg">download</a></p></li>
</ul>


<p>如果有發現更方便得功能在與大家分享！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/29/mac-app-introduction-xtrafinder/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[More Advanced octopress with Slide Features]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/29/octopress-slide-advanced-More/"/>
<updated>2012-11-29T11:44:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/29/octopress-slide-advanced-More</id>

      <content type="html"><![CDATA[<p>octopress slide 系列又來了，第三彈！不知道會不會再有續集⋯</p>

<p>哈～就讓我們繼續看下去～</p>

<p>前一篇：<a href="http://smlsun.com/blog/2012/11/28/octopress-slide-advanced/">octopress Slide Advanced</a></p>

<p>再上一篇的最後有說到：</p>

<blockquote><p>這部份我覺得可以在方便點改成下列樣式，實際用時常常會漏掉div tag 的開始或結束</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% slideFirst %}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slide $}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slide $}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slideEnd $}</span></code></pre></td></tr></table></div></figure>


<blockquote><p>其中 slideFirst 替換成 <code>&lt;div class='slide'&gt;</code></p>

<p>slide 替換成 <code>&lt;/div&gt;&lt;div class='slide'&gt;</code></p>

<p>最後 slideEnd 替換成 <code>&lt;/div&gt;</code></p></blockquote>

<p>well，我將他完成了！這算是我的Ruby初體驗，進入正題：</p>

<p>一開始我想說，嗯～如果要完成這樣的功能，我需要能夠自定Liquid tag</p>

<p>再上一篇有提到，slide功能的實作是參考網路上的大大kmees，他有實作一個plugin <strong>slide.rb</strong>，原本的程式碼如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rdiscount&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Slide</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Block</span>
</span><span class='line'>    <span class="no">SlideId</span> <span class="o">=</span> <span class="sr">/(\w+)/</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">markup</span><span class="p">,</span> <span class="n">tokens</span><span class="p">)</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>      <span class="vi">@id</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">markup</span><span class="o">.</span><span class="n">strip</span> <span class="o">=~</span> <span class="no">SlideId</span>
</span><span class='line'>        <span class="vi">@id</span> <span class="o">=</span> <span class="vg">$1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="n">id_tag</span> <span class="o">=</span> <span class="s2">&quot; id=&#39;</span><span class="si">#{</span><span class="vi">@id</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">unless</span> <span class="vi">@id</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="no">RDiscount</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="k">super</span><span class="o">.</span><span class="n">strip</span><span class="p">,</span> <span class="ss">:smart</span><span class="p">)</span><span class="o">.</span><span class="n">to_html</span><span class="o">.</span><span class="n">chop</span>
</span><span class='line'>      <span class="s2">&quot;&lt;div class=&#39;slide&#39;</span><span class="si">#{</span><span class="n">id_tag</span><span class="si">}</span><span class="s2">&gt;</span><span class="si">#{</span><span class="n">content</span><span class="si">}</span><span class="s2">&lt;/div&gt;&quot;</span><span class="o">.</span><span class="n">strip</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;slide&#39;</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">Slide</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到 他繼承了 Liquid::Block
大致上的重點：</p>

<ol>
<li>因為繼承 Liquid::Block，所以有開始就必須要有結束，所以原PO必須<code>{% slide %}</code> <code>{% endslide $}</code>成對，這也造成我認為不方便的地方，有時候容易遺漏</li>
<li>利用<code>initialize</code>取出 tag的id數值</li>
<li>render時將 Slide Block 範圍的 content 內容透過 <code>RDiscount</code>將markdown語法轉換成html</li>
<li>將轉換好的內容利用 div tag 包起來，並且將 第一步取得的id 填入div id屬性</li>
<li>最後再將tag 註冊到Liquid::Template (23行)，讓 Liquid 知道遇到{ % slide %}要進行處理</li>
</ol>


<p>大致上運作原理如上，用下面的例子來看：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">slide</span> <span class="n">first</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">  ## Title</span>
</span><span class='line'><span class="sx">  content</span>
</span><span class='line'><span class="sx">{% endslide $}</span>
</span></code></pre></td></tr></table></div></figure>


<p>轉換出來的結果為：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;slide&#39;</span> <span class="na">id=</span><span class="s">&#39;first&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h2&gt;</span>Title<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>  content
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>原文都有上述說明，大家可以去看，接著！為了讓文章開頭所說的，更方便進行slide的建立，中間我有做一個錯誤的版本，我天真的認為Jekyll本身就會將markdown內容進行轉換，故第一版的設計我做了一些調整，</p>

<ol>
<li>將原本 Slide改為繼承 <code>Liquid::Tag</code> 直接輸出 <code>&lt;/div&gt;&lt;div class='slide'&gt;</code></li>
<li>新增 slideStart 輸出 <code>&lt;div class='slide' id='first'&gt;</code></li>
<li>新增 slideEnd 輸出 <code>&lt;/div&gt;</code></li>
</ol>


<p>試著preview 看看：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% slideStart %}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% Slide $}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% SlideEnd $}
</span></code></pre></td></tr></table></div></figure>


<p>哈哈！事情果然不是我想的那樣，輸出結果如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;slide&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'><span class="nt">&lt;/div&gt;&lt;div</span> <span class="na">class=</span><span class="s">&#39;slide&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>well~沒有進行轉換，就是缺了RDiscount的處理，上網查一下他就是轉換markdown的轉譯器</p>

<p>再接再厲，調整過後完整的<strong>slide.rb</strong>，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rdiscount&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">SlideBlock</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Block</span>
</span><span class='line'>    <span class="no">SlideId</span> <span class="o">=</span> <span class="sr">/(\w+)/</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">markup</span><span class="p">,</span> <span class="n">tokens</span><span class="p">)</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>      <span class="vi">@id</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">markup</span><span class="o">.</span><span class="n">strip</span> <span class="o">=~</span> <span class="no">SlideId</span>
</span><span class='line'>        <span class="vi">@id</span> <span class="o">=</span> <span class="vg">$1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="n">id_tag</span> <span class="o">=</span> <span class="s2">&quot; id=&#39;</span><span class="si">#{</span><span class="vi">@id</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">unless</span> <span class="vi">@id</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="no">RDiscount</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="k">super</span><span class="o">.</span><span class="n">strip</span><span class="p">,</span> <span class="ss">:smart</span><span class="p">)</span><span class="o">.</span><span class="n">to_html</span><span class="o">.</span><span class="n">chop</span>
</span><span class='line'>      <span class="s2">&quot;&lt;div class=&#39;slide&#39;</span><span class="si">#{</span><span class="n">id_tag</span><span class="si">}</span><span class="s2">&gt;</span><span class="si">#{</span><span class="n">content</span><span class="si">}</span><span class="s2">&lt;/div&gt;&quot;</span><span class="o">.</span><span class="n">strip</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Slide</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Tag</span>
</span><span class='line'>    <span class="no">SlideId</span> <span class="o">=</span> <span class="sr">/(\w+)/</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">markup</span><span class="p">,</span> <span class="n">tokens</span><span class="p">)</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>      <span class="vi">@id</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">markup</span><span class="o">.</span><span class="n">strip</span> <span class="o">=~</span> <span class="no">SlideId</span>
</span><span class='line'>        <span class="vi">@id</span> <span class="o">=</span> <span class="vg">$1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="n">id_tag</span> <span class="o">=</span> <span class="s2">&quot; id=&#39;</span><span class="si">#{</span><span class="vi">@id</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">unless</span> <span class="vi">@id</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="s2">&quot;&lt;/div&gt;&lt;div class=&#39;slide&#39;</span><span class="si">#{</span><span class="n">id_tag</span><span class="si">}</span><span class="s2">&gt;&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;slideBlock&#39;</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">SlideBlock</span><span class="p">)</span>
</span><span class='line'><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;slide&#39;</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">Slide</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>重點如下：</p>

<ol>
<li>原PO 的 <code>Slide &lt; Liquid::Block</code> 保留，還是有markdown轉換的處理，更名為 <code>SlideBlock &lt; Liquid::Block</code></li>
<li>新增 <code>Slide &lt; Liquid::Tag</code> ，輸出 <code>&lt;/div&gt;&lt;div class='slide'#{id_tag}&gt;</code></li>
</ol>


<p>來看結果，範例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">slideBlock</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">## title</span>
</span><span class='line'><span class="sx">{% slide %}</span>
</span><span class='line'><span class="c1">## title</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">slide</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">## title</span>
</span><span class='line'><span class="sx">{% endslideBlock %}</span>
</span></code></pre></td></tr></table></div></figure>


<p>就可以正確轉換，只要整個slide開始結束，特別使用 <code>{% slideBlock %}</code> 與 <code>{% endslideBlock %}</code></p>

<p>中間都用 <code>{% slide %}</code>把每個段落隔開就OK啦，是不是方便許多，也不會再有忘記關閉block的情形，so easy!</p>

<h2>打完收工！</h2>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/29/octopress-slide-advanced-More/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[octopress slide Advanced]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/28/octopress-slide-advanced/"/>
<updated>2012-11-28T15:46:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/28/octopress-slide-advanced</id>

      <content type="html"><![CDATA[<p>之前為了讓octopress可以根據layout的改變為slide，後續加上了nav bar，以及footer bar，可以使用share功能</p>

<h3>不過！！</h3>

<p>後來看到網路上的大大做了更好的實作</p>

<ul>
<li><a href="http://kmees.github.com/blog/2012/07/07/html-presentations-with-octopress-and-deck-dot-js/">HTML Presentations With Octopress and deck.js</a></li>
<li><a href="http://kmees.github.com/blog/2012/07/16/html-presentations-with-octopress-and-deck-dot-js-part-ii/">HTML Presentations With Octopress and deck.js - Part II</a></li>
</ul>


<p>呈現出來的結果如下：<a href="http://kmees.github.com/slides/rugsaar-octopress.html">octopress with slide advanced</a></p>

<p>與 octopress 整合的更好，而且分類與設定更加的完善</p>

<p>於是乎，我把該位大大的<a href="https://github.com/kmees/kmees.github.com">github.com/kmees</a> clone 回來調整了一下</p>

<p>有幾個不錯的特性</p>

<ul>
<li>支援 rake new_slides</li>
</ul>


<p>與now_post類似，new_slides會將新的slides文章新增在 <code>source/slides</code> 下，同樣當你執行rake generate deploy preview 時都會幫你進行轉換，方便吧！</p>

<ul>
<li>根據post的title屬性來變更silde的佈景，以及換頁動畫，如下：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: slides
</span><span class='line'>title: "Demo Slides"
</span><span class='line'>sidebar: false
</span><span class='line'>deck_scale: false
</span><span class='line'>deck_theme: web-2.0
</span><span class='line'>deck_transition: fade
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在silde區隔的部份更方便，使用custom <code>Liquid::Block</code>，來產生html code，like that:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% slide %}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% endslide $}</span></code></pre></td></tr></table></div></figure>


<p>這部份我覺得可以在方便點改成下列樣式，實際用時常常會漏掉div tag 的開始或結束</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% slideFirst %}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slide $}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slide $}
</span><span class='line'>  ## Title
</span><span class='line'>  content
</span><span class='line'>{% slideEnd $}</span></code></pre></td></tr></table></div></figure>


<p>其中 slideFirst 替換成 <code>&lt;div class='slide'&gt;</code></p>

<p>slide 替換成 <code>&lt;/div&gt;&lt;div class='slide'&gt;</code></p>

<p>最後 slideEnd 替換成 <code>&lt;/div&gt;</code></p>

<p>呈現起來也不錯，剛剛好這禮拜要去講一個talk，實際完成品 <a href="http://smlsunxie.github.com/slides/java-with-node.html">nodejs+java</a>，整體更一致了！</p>

<p>how about that??試試看囉！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/28/octopress-slide-advanced/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[笨笨的死法 Dumb Ways to Die]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/22/Dumb-Ways-to-Die/"/>
<updated>2012-11-22T16:13:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/22/Dumb-Ways-to-Die</id>

      <content type="html"><![CDATA[<p>剛剛在查資料時，看到一個有趣的影片</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/JKZ27ZPMrRo" frameborder="0" allowfullscreen></iframe>


<p>配著輕快的音樂，輕鬆的把各種死法，輕輕帶過～</p>

<p>呵～做傻事不得不慎阿</p>

<p>話又說回來，這宣導短片真的很有創意！</p>

<p>主要宣導鐵路平交道的安全，用幽默的方式讓人印象深刻，可說是大人小孩都愛</p>

<p>同樣是鐵路公司在做事，也希望台鐵能夠學習一下，用口號宣導，不如特別一點讓人印象深刻阿！</p>
<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/22/Dumb-Ways-to-Die/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ireport系列-安裝篇]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/12/ireportxi-lie-an-zhuang-pian/"/>
<updated>2012-11-12T21:52:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/12/ireportxi-lie-an-zhuang-pian</id>

      <content type="html"><![CDATA[<h1>ireport下載</h1>

<p><a href="http://sourceforge.net/projects/ireport/files/iReport/">ireport 下載網址</a></p>

<p>文章撰寫時，最新版本為 iReport-4.8.0</p>

<p>for ubuntu 請下載 <a href="http://sourceforge.net/projects/ireport/files/iReport/iReport-4.8.0/iReport-4.8.0.tar.gz/download">iReport-4.8.0.tar.gz</a></p>

<h1>ireport指令安裝</h1>

<ul>
<li><p>安裝java</p>

<pre><code>  sudo apt-get install openjdk-7-jdk
</code></pre></li>
<li><p>下載ireport</p>

<pre><code>  wget http://downloads.sourceforge.net/project/ireport/iReport/iReport-4.8.0/iReport-4.8.0.tar.gz
</code></pre></li>
<li><p>解壓縮</p>

<pre><code>  tar zxvf iReport-4.8.0.tar.gz
</code></pre></li>
<li><p>執行ireport</p>

<pre><code>  sh ~/iReport-4.8.0/bin/./ireport
</code></pre></li>
</ul>

<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/12/ireportxi-lie-an-zhuang-pian/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[rework 工作大解放 讀後心得]]></title>
<link href="http://smlsunxie.github.com/blog/2012/11/05/rework-gong-zuo-da-jie-fang-du-hou-xin-de/"/>
<updated>2012-11-05T09:32:00+08:00</updated>
<id>http://smlsunxie.github.com/blog/2012/11/05/rework-gong-zuo-da-jie-fang-du-hou-xin-de</id>

      <content type="html"><![CDATA[<h1>其他人的心得</h1>

<ul>
<li><a href="http://woundero.wordpress.com/2012/10/30/rework/">Rework：我們從「工作大解放」學到的十件事</a></li>
</ul>

<p><a rel="bookmark" href="http://smlsunxie.github.com/blog/2012/11/05/rework-gong-zuo-da-jie-fang-du-hou-xin-de/"></a></p>]]></content>
    </entry>
  
</feed>
