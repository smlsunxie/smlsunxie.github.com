<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[蹤影]]></title>
  <link href="http://smlsun.com/atom.xml" rel="self"/>
  <link href="http://smlsun.com/"/>
  <updated>2013-01-22T10:01:41+08:00</updated>
  <id>http://smlsun.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[HOWTO: Apple Keyboard mapping for Ubuntu]]></title>
<link href="http://smlsun.com/blog/2013/01/22/ubuntu-mac-keyboard-config/"/>
<updated>2013-01-22T09:49:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/22/ubuntu-mac-keyboard-config</id>

      <content type="html"><![CDATA[<p>不曉得各位使用 macbook 的阿宅有沒有ㄍ跟我一樣的困擾，那就是雖然使用 Mac os 但是還是需要連到遠端的不同 os 比如說 ubuntu 或者 windows 之類的，當你在同時操作這些系統時，讓人不習慣的不是 os 本身提供的功能，或者是介面的 layout，其實最令我困擾的是 <strong>Win and ubuntu 的 ctrl</strong> 以及 <strong>Mac 的 command</strong>，真的讓我非常的錯亂，甚至會手抽筋！</p>

<p>人總是在受不了或看不慣時會尋找解法，所以我受不了了！上網找了一下，總算讓我找到設定方式，其實步驟很簡單：</p>

<ol>
<li><p>Go into System -> Preferences -> Keyboard</p></li>
<li><p>Click on the &#8220;Layouts&#8221; tab and then click the &#8220;Layout Options&#8221; button.</p></li>
<li><p>Click on &#8220;Alt/Win key behavior&#8221;</p></li>
</ol>


<p>就這樣，不要再忍受令人錯亂的 ctrl 與 command 鍵，讓複製、剪下、貼上行雲流水吧！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/22/ubuntu-mac-keyboard-config/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[java OCP 題目解析：關於 java 指標的運作觀念]]></title>
<link href="http://smlsun.com/blog/2013/01/17/java-pointer/"/>
<updated>2013-01-17T11:44:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/17/java-pointer</id>

      <content type="html"><![CDATA[<p>最近在看 OCP java 證照的題目，有個觀念與大家分享，在實際開發上才不會因為觀念不清楚產生 bug 時死的不明不白，題目如下：</p>

<p>資料來源：<a href="http://yaya741228.pixnet.net/blog">來喝杯JAVA咖啡</a></p>

<p>Given:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Foo</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setX</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getX</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Gamma</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">static</span> <span class="n">Foo</span> <span class="nf">fooBar</span><span class="o">(</span><span class="n">Foo</span> <span class="n">foo</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">foo</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Foo</span> <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">(</span><span class="mi">300</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">foo</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;-&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Foo</span> <span class="n">fooFoo</span> <span class="o">=</span> <span class="n">fooBar</span><span class="o">(</span><span class="n">foo</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">foo</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;-&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">fooFoo</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;-&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">foo</span> <span class="o">=</span> <span class="n">fooBar</span><span class="o">(</span><span class="n">fooFoo</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">foo</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;-&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">fooFoo</span><span class="o">.</span><span class="na">getX</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>What is the output?</p>

<pre><code>A. 300-100-100-100-100
B. 300-300-100-100-100
C. 300-300-300-100-100
D. 300-300-300-300-100
</code></pre>

<p>答案：</p>

<pre><code>B
</code></pre>

<p>解析：</p>

<pre><code>做這題頭腦不夠清楚可能會被搞混喔
這題是考JAVA 隱藏的指標觀念，其實規則很容易：
1. 方法的呼叫永遠都是傳值，方法在接到值之後，會另外產生一個空間來存這個值，也就是有兩份值，兩個位址
2. 等號的運算有分為基本資料型態(int, float等等) 和物件兩種
    2.1. 等號處理基本資料型態時是傳值
    2.2. 等號處理物件時是傳位址
</code></pre>

<p>依照題目的情況來模擬一下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Foo</span> <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">(</span><span class="mi">300</span><span class="o">);</span>
</span><span class='line'><span class="n">Foo</span> <span class="n">fooFoo</span> <span class="o">=</span> <span class="n">fooBar</span><span class="o">(</span><span class="n">foo</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>生成一個物件，並且呼叫下面方法，在呼叫之前，記憶體的情況如下</p>

<table class="table">

  <tbody>
    <tr>
      <td>指標</td>
      <td>main:foo</td>

    </tr>
    <tr>
      <td>內容</td>
      <td>Foo物件:X=300</td>

    </tr>

  </tbody>
</table>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">static</span> <span class="n">Foo</span> <span class="nf">fooBar</span><span class="o">(</span><span class="n">Foo</span> <span class="n">foo</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">foo</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>方法第一行接收了物件之後就另外產生空間複製一份，記憶體如下</p>

<table class="table">

  <tbody>
    <tr>
      <td>指標</td>
      <td>main:foo</td>
      <td>fooBar:foo</td>
    </tr>
    <tr>
      <td>內容</td>
      <td>Foo物件:X=300</td>
      <td>Foo物件:X=300</td>
    </tr>

  </tbody>
</table>


<p>方法第二行new 了一個物件，也就是生成了新的位址，把這個物件位指指派給foo，記憶體如下</p>

<table class="table">

  <tbody>
    <tr>
      <td>指標</td>
      <td>main:foo</td>
      <td></td>
      <td>fooBar:foo</td>
    </tr>
    <tr>
      <td>內容</td>
      <td>Foo物件:X=300</td>
      <td>Foo物件:X=300</td>
      <td>Foo物件:X=100</td>
    </tr>

  </tbody>
</table>


<p>你會發現，有一個空間沒有指標指到它了，沒錯，這樣一來這個空間隨時會被空間回收程序收走</p>

<p>方法第三行回傳了fooBar: foo指標</p>

<p>後來在主方法執行了這一行</p>

<pre><code>foo = fooBar(fooFoo);
</code></pre>

<p>之後記憶體狀況會變成</p>

<table class="table">

  <tbody>
    <tr>
      <td>指標</td>
      <td></td>
      <td></td>
      <td>fooBar:foo</td>
    </tr>
    <tr>
      <td>內容</td>
      <td>Foo物件:X=300</td>
      <td>Foo物件:X=300</td>
      <td>Foo物件:X=100</td>
    </tr>

  </tbody>
</table>


<p>只要記住前述兩大規則，就可以掌握所有JAVA 中所有的指標規則</p>

<p>我只有將排版美化，其他都是原作者的內容，另外還有一題特殊情形：</p>

<p>Given:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">KungFu</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Integer</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">400</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Integer</span> <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
</span><span class='line'>        <span class="n">x</span><span class="o">++;</span>
</span><span class='line'>        <span class="n">StringBuilder</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">(</span><span class="s">&quot;123&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">StringBuilder</span> <span class="n">sb2</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">;</span>
</span><span class='line'>        <span class="n">sb1</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;5&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="n">x</span> <span class="o">==</span> <span class="n">y</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">sb1</span> <span class="o">==</span> <span class="n">sb2</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>What is the result?</p>

<pre><code>A. true true
B. false true
C. true false
D. false false
E. Compilation fails.
F. An exception is thrown at runtime.
</code></pre>

<p>答案：</p>

<pre><code>B
</code></pre>

<p>解析：</p>

<p>Integer是int的WapperClass，雖然以物件的形式來表現，不過在做等於運算的時候要視為基本資料型態，以傳值的作法來做</p>

<p>一般物件的話當然做等於運算就是傳指標了</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/17/java-pointer/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[androVM - Run Android In VirtualBox And Deploy App]]></title>
<link href="http://smlsun.com/blog/2013/01/16/android-vm/"/>
<updated>2013-01-16T21:24:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/16/android-vm</id>

      <content type="html"><![CDATA[<p>在隨處亂逛時，看到一個有趣的東西，那就是android VM!</p>

<p><a href="http://androvm.org/blog/download/">androVM</a></p>

<p>開發 Android 的經驗中，如果要驗證所開發的程式是否正確，比較常用的兩個方法：</p>

<ol>
<li>使用 google 官方的虛擬 android</li>
<li>使用實體機器</li>
</ol>


<p>第一個的問題就是，速度真 T…M… 的慢，在講求速度的開發環境，會很想殺人！！！</p>

<p>第二個的問題是，如果 usb 不夠插，或臨時設備不再身邊，或是設備出了意外… 那只好工作停擺啦</p>

<p>所幸還有第三個方案，他還是模擬器沒錯，但是比 google 官方的虛擬 android 來的快多了，號稱快 4 倍，我是憑感覺真的有比較快，至少你不會覺得 <strong>頓</strong>！</p>

<p>安裝方式很簡單</p>

<ol>
<li>首先你需要安裝 <a href="https://www.virtualbox.org/">Virtualbox</a></li>
<li>下載 <a href="http://androvm.org/blog/download/">androVM</a> 官方提供的 ova 檔，請選擇適合你用的版本</li>
<li>下載完成後，請點兩下你下載下來的 ova 檔，他會將設定檔載入你的 virtualBox，包括映像檔，所以一旦你安裝完成後就可以把下載下來的檔案刪掉</li>
</ol>


<p>如此一來就完成啦，實際執行結果如下：</p>

<p><img src="https://lh4.googleusercontent.com/-A623K9XMEUQ/UPeMFnwsF5I/AAAAAAAALfk/LSDz6MekOVY/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.14.18.jpg" alt="img" /></p>

<p>啟動速度比實體機器快很多喔(三倍速+)！</p>

<p>我個人覺得如果還可以支援 camera 那就太完美啦！不過網路上也有人對作者反應，作者也承諾 I&#8217;ll readd the feature asap! 如此一來在開發上將更有彈性，相信以 virtualBox 為基底應該是可以做的到。</p>

<p>再來鄉民應該會覺得，我沒事拿個 vm 來玩平板或手機幹嘛？當然還要能夠拿來開發，並且可以將程式 deploy 上去進行測試啦！在這裡我將說明執行步驟，基本上你可以將運行在 VM 上的 android 想像成現在連接著你的電腦，只是不同的是他在你的電腦中運行，所以你必須告訴你的電腦要在哪裡連接，連接方式是透過 指定 IP 告訴你的開發環境正確的位置，讓我們來一步接著一步進行：</p>

<ol>
<li><p>首先必須先讓 vm 能夠有個存取的位置，所以我們需要打開 virtualBox 的網路設定頁面</p>

<p> <img src="https://lh4.googleusercontent.com/-P3bHwsK-Y3w/UPeMGgkLUeI/AAAAAAAALfw/fCCG_HEddBQ/s603/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.31.27.jpg" alt="img" /></p>

<p> 將附加選項選擇：橋接介面卡，然後名稱就是你的實體網路的接口，我的電腦只有 wifi，如果是實體網路就應該為 <code>eh0</code>，設定好後，可以進到虛擬的 Android 查看 ip 位置：</p>

<p> <img src="https://lh4.googleusercontent.com/-50Uem4xpARg/UPeMHs3YcWI/AAAAAAAALf4/YwWcBpq6WVs/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.35.07.jpg" alt="img" /></p>

<p> 進到 system status 可以看到 ip 為 <code>10.0.3.15</code>，實際上你去 ping 是 ping 不到的，因為那是虛擬的 ip，那要如何找到正確的 ip 呢？androVM 很貼心的在裡面預裝了一個 app 可以讓你對 android 進行一些設定還有環境變數的查詢，裡面就有真實設備的 ip 啦！如下圖：</p>

<p> <img src="https://lh3.googleusercontent.com/-OM5gKYL6QEg/UPeMIU0ILzI/AAAAAAAALgY/IRkUa4FnvCw/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.38.24.jpg" alt="img" /></p>

<p> 有個 android 機器人，好像在做蛋糕(大便) 的樣子 <code>androVM Configuration</code>，哈～顯示如下圖：</p>

<p> <img src="https://lh4.googleusercontent.com/-azSrBFWVJ94/UPeMI827gVI/AAAAAAAALgI/vVTWktc1Q4A/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.39.38.jpg" alt="img" /></p>

<p> 點進去後你可以看到在執行畫面上方有個</p>

<p> <code>eh0: 192.168.1.8</code></p>

<p> 就是實際你可以存取得位置啦！</p></li>
<li><p>接著我們就必須將設備註冊到 adb 上，讓我們進入到 android sdk 資料夾裡面，路徑為</p>

<p> <code>${ANDROID_HOME}/platform-tools</code></p>

<p> 底下應該有個 <code>adb</code> 的檔案，打開 terminal 根據剛剛查到的 ip 輸入：</p>

<p> <code>./adb connect 192.168.1.8</code></p>

<p> 就完成連接了，簡單吧！正常應該會吐出下列訊息</p>

<p> <code>connected to 192.168.1.8:5555</code></p>

<p> 接著我們來看實際運作的狀況，打開 eclipse，執行要 deploy 的專案：</p>

<p> <img src="https://lh6.googleusercontent.com/-fC3_LracFxc/UPeMJkniW2I/AAAAAAAALgQ/oosUBfdmri8/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.50.54.jpg" alt="img" /></p>

<p> 在這裡執行 <code>Run As &gt; Adroid application</code> 會先檢查有無設備連接上，如果沒有會用 google 內建的虛擬機器，如果有連上就會使用實體機器(不過還是虛擬的)，我們就可以看到執行畫面如下：</p>

<p> <img src="https://lh4.googleusercontent.com/-IsPB4DxxolY/UPeMKUS4a7I/AAAAAAAALgU/dBhsGIWRSfM/s603/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-17+%E4%B8%8B%E5%8D%8812.53.32.jpg" alt="img" /></p>

<p> 就是如此簡單！接著你要 debug 或是檢查在 app 操作過程中吐出來的訊息就都可以在 eclipse 底下的 Console 進行觀察了，相信開發過程中會方便許多，也避免掉很多不必要的麻煩，試試看囉！</p></li>
</ol>

<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/16/android-vm/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Introduction to Grails: 特性以及各種不同約定放置程式的用途介紹]]></title>
<link href="http://smlsun.com/blog/2013/01/15/intrduction-grails/"/>
<updated>2013-01-15T20:17:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/15/intrduction-grails</id>

      <content type="html"><![CDATA[<p>之前在某次 nodejs 聚會應邀說明 <a href="http://smlsun.com/slides/java-with-node.html">nodejs 在 java 上如何結合運用</a>，其中有介紹到 Grails，一個完整的 java frameworks，涵蓋前端到後端所有的程式開發，除此之外，他還效法了 ruby on rails 的精神，大量簡化了 java 在開發流程上繁瑣的編譯、打包、佈署等相關的作業，以及複雜的環境設定，而之前對我而言只知道其特性，並沒有很深入去使用，剛好最近有幸使用他來開發一些應用，故想透過這個機會，慢慢把所學整理起來，介紹給大家，作為這系列的第一篇，將說明 grails 的特性，以及其各種不同用途的 Class(groovy) 介紹。</p>

<p>Grails 的特性，只要熟悉 ruby on rails 的朋友應該可以大致了解，在加上 java 的血統，其比較重要的特性如下：</p>

<ul>
<li>Groovy：與Java 平台集成性最好的動態語言作為Grails的基礎</li>
<li>建構於 Spring、Hibernate、Quartz、SiteMesh、JUnit、Ant 成熟開源框架之上</li>
<li>URLMappings：Don’t Repeat Yourself</li>
<li>約定優於配置：Convention over Configuration</li>
<li>自動產生 CRUD 維護畫面：scaffold</li>
</ul>


<p>使用 Groovy，做為 grails 開發的基礎，其特性就是大量簡化 java 語言繁瑣的程式指令步驟。</p>

<p>可以看到 Grails 算是集目前 java 世界許多成熟的套件，這些原本單獨使用很繁瑣的套件，在 Grails 上都有某種程度的簡化，簡單到一開始很難直覺想像，往後會會在詳細介紹，這邊不多談。</p>

<p>接著就是設定的部份，在傳統的 java 開發我們常常需要設定像是 jdbc config 、 spring aop 設定的位置等，在 Grails 中，是基於「約定優於配置」的精神，也就是只要放對位置，設定就會生效。</p>

<p>以及 Don’t Repeat Yourself 的精神，在網路應用程式的開發，假設有用到 restful 的技術，在傳統的 JAVA 開發，總要為每個 class 設定 url 規則，如果一多是很繁瑣的。</p>

<p>最後就是自動產生 CRUD 維護畫面，在開發初期，常常需要快速的建立測試資料，以往要是前端與後端程式開發是分開的，總是需要等到後端工程師將 API 開出來後才能開始進行資料庫操作，在 grails 效法 ruby rails 也提供了快速產生維護畫面的功能。</p>

<p>以上是 grails 的特性簡介，不過！絕對不只如此其他還有很多特性，往後會在一一介紹，完全改變對於 Java 開發的習慣。</p>

<p>再來就要在簡單介紹，在 grails 各種不同用途的 Class(groovy) 介紹：</p>

<p><img src="https://lh6.googleusercontent.com/-qgBQ7bBJaDg/UPVP_UtqoxI/AAAAAAAALfQ/rPBPRd5iLXk/s223/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-15+%E4%B8%8B%E5%8D%888.46.39.jpg" alt="img" /></p>

<p>在「約定優於配置」的精神下，grails 本身就針對不同責任的程式進行分類，可以看到如上圖幾種，這邊將簡單介紹各個項目所有處理的事情：</p>

<ul>
<li>domain: 簡單來講就是原本 hibernate 的 DAO 物件，如果沒有用過類似 O/R MAPPING 的技術可以以把它想像成每個不同的 table 的定義，屬於 MVC 架構中的 Model</li>
<li>controllers: 也就是 MVC 架構中的 control，用來操作 Model，以及將運算結果呈現給 view</li>
<li>view: MVC 架構中的 view，在 grails 的世界，是用 gsp ，可以想像成 jsp</li>
<li>taglib: 可以在 view 中使用一些已經定義好的 tag ，原本在傳統的 j2ee 是非常繁瑣的技術，在 grails 可以很方便使用。</li>
<li>services: 商業邏輯放置的位置，這部份的程式可任意在 domain、controllers、taglib中直接宣告，將利用 spring 進行注入，有 scope 以及 transaction 交易安全的屬性可以進行操作</li>
<li>utils: 檢查數值或資料是否符合特定的規格運算程式放置的地方，比如說 email</li>
<li>scripts: 可以撰寫在 terminal 或是 command line 下可以執行的程式，搭配 <code>grails create-script execute-report</code> 使用。</li>
<li>i18n: 也就是多語系啦，可以搭配 taglib 在 view 層進行語系的轉換</li>
<li>src/java: 在 grails 如果你要寫傳統 java 也是 ok 的只要放在這個資料夾，就會編譯成 class</li>
<li>src/groovy: 上述分類中無法歸屬，或著原本有寫過純 groovy 的程式碼就放在這</li>
<li>test/utils: 單元測試，只要放在這資料夾的測試程式，都會被執行</li>
<li>test/integration: 整合測試，也就是會將上述所有的不同功能都載入進行測試。</li>
</ul>


<p>大致上上面所說的就是 grails 中一開始需要習慣的地方，與以往的 free style 的開發雖然多了些限制，但有了約定，基本上程式也不會亂放導致東一塊西一塊，並且透過了解上面的結構，對於程式初學也可以較清楚知道一個完整的程式，必須包含哪些不同責任的元件。</p>

<p>也許有些專案成員沒有辦法立即現有的工作換到新的開發框架，不過！找時間玩玩看，相信可以更了解程式的責任釐清，像我就是！陸續會在根據不同責任的程式使用的方式個別進行詳細說明，文章就到這啦！</p>

<p>這篇花了我一小時的時間，寫文章還是不夠快速，要在加油…</p>

<p>最後如果想要更進一步<strong>及早</strong>了解可以參考 <a href="http://grails.org/doc/latest/">Grails Quick Start</a></p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/15/intrduction-grails/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[video man - 『尊重』的重要，與『沒關係』的可怕]]></title>
<link href="http://smlsun.com/blog/2013/01/14/video-man/"/>
<updated>2013-01-14T15:26:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/14/video-man</id>

      <content type="html"><![CDATA[<p>有趣的短片介紹 <strong>man</strong> ：</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/WfGMYdalClU?list=FLEHOkEUdqDd_BUFy5_YFT0g" frameborder="0" allowfullscreen></iframe>


<p>感想：</p>

<p>人類的慾望隨著科技的發達，只有增加沒有減少過，為了讓我們的生活更便利，往往犧牲別的物種的世界，即使是同種不同國家的人類們，每天都在競爭中踩著別人往上爬，到最後其實什麼都沒得到，影片最後的空虛世界，在消耗了那麼多資源後人類作為王者存在又為？在更為強大的外星人面前也是被打扁的份。</p>

<p>總是在想，以前的農業社會，與大自然共存，就算物質生還沒有現在的多，但人們是單純且快樂的，人與大自然間的關系有一份尊重在，在現在的人們心中『尊重』的概念越來越少，以致於人與人之間越來越自私，看看社會新聞，酒駕：撞人後不管死活先跑了再說；出去玩亂丟垃圾，反正有人撿，大家都一樣沒關係，為了賺錢污染環境也沒關係，是多麼的自大！</p>

<p>也許有人會覺得又在無病呻吟，講這麼多大環境還不是沒辦法改變！</p>

<p>的確，一人之力是無法改變，但何不從你我開始，大家都有『尊重』的觀念，自然世界就會越來越美好！</p>

<p>『尊重』別人的安全，所以不應該酒駕，設身處地的想，假若今天出事的是你的家人，你開心嗎？</p>

<p>『尊重』大家共有的環境，所以不應該亂丟垃圾，設身處地的想，如果別人來你家亂丟垃圾，你開心嗎？</p>

<p>『尊重』賺錢的方式，取之自然但也要永續的自然，哪天世界不再那麼美麗，那活著還有什麼好期待？</p>

<h3>勿以惡小而為之，勿以善小而不為</h3>

<p>也許現在的很少讀古人的言詞，在白話一點就是：</p>

<p>不要因為做錯的事無關緊要所以做了也『沒關係』，不要因為做一點對的事無法改變現況所以不做也『沒關係』，那我乾脆就不要做了，反正也沒效</p>

<p>如果事這樣的想法，那不好的事慢慢的累積，就會變成大壞，好的事情因為都不去做那又怎麼會有更好的明天勒？</p>

<p>堅持一下，觀念先對了，就會越做越對，累積久了，也會令人刮目相看；要得到別人的尊重，要先從尊重別人開始！</p>

<p>還記得之前小學讀過一個故事叫做『差不多先生』，而我們常常是『沒關係先生』，對於做對的事情上不能再『沒關係』了！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/14/video-man/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ubuntu 12.10 install gnome(no effects) and button layout change]]></title>
<link href="http://smlsun.com/blog/2013/01/14/ubuntu1210-button-layout-change/"/>
<updated>2013-01-14T11:32:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/14/ubuntu1210-button-layout-change</id>

      <content type="html"><![CDATA[<p>對於常常使用 windows 的 user 剛換到使用 ubuntu 時，一定很不習慣視窗按鈕放大縮小的位置，特別剛要開始熟悉 ubuntu，會先從 VM 安裝 ubuntu 來體驗一下，不過，很不幸的，在目前最新的 ubuntu 12.10 不支援 2D unity，也無從安裝，所以在 vm 下使用 ubuntu 因為效能的關係，使用者體驗不是很好，如果要能夠使用 2D 的環境，目前只剩下 gnome (no effects) 可以選擇，至於安裝方式如下：</p>

<pre><code>sudo apt-get install gnome-session-fallback
</code></pre>

<p>如此一來，至少在 vm 環境下，效能體驗還是可以接受，接著如果要改變 button layout，在 12.10 之前會使用 gconf-editor，但經我親身使用此方法無法改變 nautilus，ubuntu 下的檔案管理軟體的 button layout，但經我測試 chrome 倒是有效果，應該是第三方還未讀取新的設定方式，回到正題，如果要調整，只要改用下列指令即可：</p>

<pre><code>gsettings set org.gnome.desktop.wm.preferences button-layout ':minimize,maximize,close'
</code></pre>

<p>不過就是因為尚未所有的第三方軟體都有將參數讀取改至新的設定方式，故保險起見，舊有的設定方式也請服用：</p>

<pre><code>gconftool-2 --set "/apps/metacity/general/button_layout" --type string ":minimize,maximize,close"
</code></pre>

<p>當然如果你使用的是實體機器，在 unity 底下 button layout 本來就跟 windows 底下一樣，如果有人跟我有一樣的困擾可以參考一下囉！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/14/ubuntu1210-button-layout-change/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[google spreadsheets connect]]></title>
<link href="http://smlsun.com/blog/2013/01/13/google-spreadsheets-connect/"/>
<updated>2013-01-13T16:34:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/13/google-spreadsheets-connect</id>

      <content type="html"><![CDATA[
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/13/google-spreadsheets-connect/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[this guy is my bro!這傢伙是我哥～]]></title>
<link href="http://smlsun.com/blog/2013/01/09/this-guy-is-my-bro/"/>
<updated>2013-01-09T10:27:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/09/this-guy-is-my-bro</id>

      <content type="html"><![CDATA[<p><img src="http://4.bp.blogspot.com/-qkBOxhKvsu4/UGqp2TSiLSI/AAAAAAAAAC8/EWBp1UoXzaw/s1600/P1000578.jpg" alt="img" /></p>

<p>這傢伙是我哥，認識我的人都知道我是很穩定的人，但我哥卻是個浪子，一個非常有勇氣去追逐夢想的人，曾幾何時我還年輕時，總覺得我哥很不務正業，每天都在想東想西，做著一些不算工作的工作，常常讓爸媽擔心，十足是家裡的問題份子，但隨著年歲的增長，看東西的角度不一樣後，現在卻覺得我哥很了不起，能夠有勇氣去追逐他的夢想，並且用他異於常人的方式去完成，有多異於常人？可以看看他寫的網誌，那些艱苦的旅程，真的很難想像，也非常的有趣！</p>

<p>有哪些旅程呢？</p>

<p>從一開始的<a href="http://www.wretch.cc/blog/rz250xr/11556922">複習曲之金旺環島之大雨伴我行</a></p>

<p><img src="https://lh3.googleusercontent.com/-eyj-BRr6FT0/UOzmeKlUmpI/AAAAAAAALd8/Ib7w0j8aF3M/s640/1961773358.jpg" alt="img" /></p>

<p>然後是<a href="http://www.wretch.cc/blog/rz250xr/11889412">流浪漢與男子漢的新春萬榮丹大貫通協奏曲</a>，重點是…騎腳踏車…過程都在不是路的路</p>

<p><img src="https://lh3.googleusercontent.com/-ywo7PaIfmqY/UOzmZsH2EAI/AAAAAAAALdM/whOP-589CAI/s640/1404992859.jpg" alt="img" /></p>

<p>接著<a href="http://www.wretch.cc/blog/rz250xr/12147238">北京到西藏越野車之旅</a>&#8230;重點是騎摩托車，在遇到車禍，在火車上修引擎->因為我家是摩托車店，別懷疑！</p>

<p><img src="https://lh6.googleusercontent.com/-iOolL_NMwy8/UOzma320ptI/AAAAAAAALdY/FEctbyj2-jM/s600/1283332842.jpg" alt="img" /></p>

<p>對了！還有這篇很有趣，<a href="http://www.wretch.cc/blog/rz250xr/12214139">睡</a></p>

<p><img src="https://lh4.googleusercontent.com/-aQk3XSMQk_s/UOzmb6NiG1I/AAAAAAAALdg/CB8aKbRzORE/s640/1492851339.jpg" alt="img" /></p>

<p>西藏之旅得到一個很屌的獎狀！</p>

<p><img src="https://lh3.googleusercontent.com/-O6sa5TS6Hao/UOzmccSHLnI/AAAAAAAALdo/Gb3U1Sf7gFc/s640/1281824619.jpg" alt="img" /></p>

<p>然後我老哥展開他的澳洲兩年的打工旅遊之旅，他又騎著他在當地買的金旺開始他的環澳洲之旅</p>

<p><img src="http://i.imgur.com/hUm2A.jpg" alt="img" /></p>

<p><a href="http://www.wretch.cc/blog/rz250xr/12373657">單騎金旺深入澳洲中心</a></p>

<p>又是一個令人傻眼的環澳洲島之旅</p>

<p><img src="https://lh6.googleusercontent.com/-rCv9G7sBox8/UOzmc97IEqI/AAAAAAAALdw/lqMRGD7W6wU/s600/1444736965.jpg" alt="img" /></p>

<p>之後趁著空檔時間跑去<a href="http://www.wretch.cc/blog/rz250xr/12401508">泰國少林寺</a>，裡面有說到：</p>

<blockquote><p>要先和教練相約面試
面試內容大約是詢問學習泰拳的動機,並確定有能力完成訓練,而不是抱持玩樂的心情
實際上課的內容是真的非常辛苦,我想我當兵的操課連五分之一都不到吧</p></blockquote>

<p><img src="https://lh5.googleusercontent.com/-WPqco-sA8WQ/UO0g7sNk9DI/AAAAAAAALek/7y4ipvKfD_E/s535/1328731743.jpg" alt="img" /></p>

<p>哈哈～台灣阿兵哥汗顏…</p>

<p>度過困難的泰拳訓練，離開 <a href="http://www.wretch.cc/blog/rz250xr/12402097">A LITTLE PIECE OF HEAVEN</a></p>

<p><img src="https://lh3.googleusercontent.com/-fu0W0RpoU_8/UO0kGMm_BHI/AAAAAAAALe4/LfA5eY9DZsY/s600/1630126878.jpg" alt="img" /></p>

<p>文章最後：</p>

<blockquote><p>非常難忘,這樣的生活似乎也讓我中毒了&#8230;
開始思索我需要麼不需要什麼,是否因為要求得太多而讓人生變得越來越貧窮
間單的生活才是最自在的&#8230;.我需要想想</p></blockquote>

<p>嗯…也值得我們想想&#8230;</p>

<p>呼～是不是好像跟著文章走過很多不同的地方，接著在他回來台灣以後，本想他應該就這樣定了下來沒想到兩個禮拜後…</p>

<p><a href="http://www.wretch.cc/blog/rz250xr/12408306">流浪漢即將前進印度!!</a></p>

<p><img src="https://lh6.googleusercontent.com/-6eoe4l3c1dM/UOzoG5VImOI/AAAAAAAALeQ/PXdCt5aHwkk/s640/1281824624.jpg" alt="img" /></p>

<p><a href="http://613tin.blogspot.tw/2012/11/blog-post_27.html">印度旅行近況報告</a></p>

<p><img src="http://1.bp.blogspot.com/-dyJSlFINbig/ULIau1otqGI/AAAAAAAAAF0/O9UKgenS8Rg/s320/P1010098.JPG" alt="img" /></p>

<p>我想旅行是會令人上癮的，雖然他號稱他回來後就不會這樣趴趴走，但我覺得應該要持保留態度，哈哈～不管如何，我老哥就是一個屌字可以形容，誰說一定要會念書，進大公司才是最好的選擇，傳統觀念總是給我們太多枷鎖，如果我哥回來有段時間不再亂跑，我一定鼓勵他出本書，我想那內容應該是很吸引人才對，希望我有機會可以為大家介紹囉！最後附上我老哥的網誌：</p>

<p><a href="http://www.wretch.cc/blog/rz250xr">流浪漢越野生活</a></p>

<p><a href="http://613tin.blogspot.tw/">新流浪漢越野生活</a></p>

<p>來隨著流浪漢環遊世界吧！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/09/this-guy-is-my-bro/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[快速了解 node 以及 mongodb，mail的使用]]></title>
<link href="http://smlsun.com/blog/2013/01/09/node-start/"/>
<updated>2013-01-09T09:40:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/09/node-start</id>

      <content type="html"><![CDATA[<p>要了解一個程式語言的運作與特性，有時候不是一時半刻可以熟悉，有時候也必須經歷一些專案歷練，但一開始可以透過一些持程式碼，來快速了解，實際動手做總是比用看的更能深入你的腦袋，這邊就來介紹一個不錯的node運作的範例，看完以後相信會對node的運作會有點概念，像我就是！</p>

<p>這個網站是一個簡單的帳號管理系統，簡單來說他就只有登入功能，記錄session，對於建立的使用者可以進行增修改查，並且透過操作mongodb來進行資料的操作，以及使用者密碼加密，網站如下：</p>

<p><a href="http://www.quietless.com/kitchen/building-a-login-system-in-node-js-and-mongodb/">Building a Login System in Node.js and MongoDB</a></p>

<p><img src="http://www.quietless.com/kitchen/wp-content/uploads/2012/06/login-panel.jpg" alt="img" /></p>

<p>雖然只是很單純的登入系統，但是算是涵蓋的非常完整，整個前端到後端以及database的運用，還有rest的http Method的操作都有使用到，包括透過mail來讓忘記密碼的使用者通知更換密碼的網址等，這麼好的範例哪裡找阿！這麼補的大補帖，不吃可惜～</p>

<p>透過看別人的程式能夠快速了解甚學習別人的設計，雖然沒有當面授課，也可以增加你的功力，何樂而不為，只是好的範例真的很少，夠簡單能夠明瞭的也不多，希望藉由這個範例能夠讓對node有興趣的朋友能夠有個好的開始，就讓我們一起 rock codeing with node 吧！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/09/node-start/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[讓nodejs透過 Upstart 作為service 啟動，並且搭配makefile deploy]]></title>
<link href="http://smlsun.com/blog/2013/01/09/node-production-setting/"/>
<updated>2013-01-09T08:36:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/09/node-production-setting</id>

      <content type="html"><![CDATA[<p>最近在開發node，一開始相信大家都是在本機進行程式開發，如果到了production的階段，也許你會有個server run你的ap，過程中你會需要上傳程式，這個過程事繁瑣的，如果每次要手動上傳，重新伺服器，累積起來也是可觀的時間，甚至可以多寫幾行code，喝杯咖啡，將時間浪費在生命中美好的事物上。</p>

<p>so 讓我們進入正題，在此假設你已經準備好你開發的程式並且已經準備好要將你的產品發布到線上的伺服器，首先我們必須讓你的node能夠作為service運行，如此一來當你遠端透過ssh 開啟 node時才不會因為登出後，node server 隨即停止，在這你會用到<a href="http://upstart.ubuntu.com/">Upstart</a>，在ubuntu已經內建，可以很方便進行 ap server 設定為service，並且透過<code>start yourapp</code>，<code>stop yourapp</code> 來啟動關閉你的服務，就讓我們來看實際設定的方式吧！</p>

<p>首先你必須建立屬於你的server 的設定檔，假設你的app就叫做 yourapp，so 檔案路徑如下</p>

<p><code>/etc/init/yourapp.conf</code></p>

<p>範例如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>description "start yourapp"
</span><span class='line'>author "user"                                                              
</span><span class='line'>
</span><span class='line'>start on startup
</span><span class='line'>stop on shutdown
</span><span class='line'>
</span><span class='line'>script
</span><span class='line'>    export HOME="/root"
</span><span class='line'>    #echo $$ &gt; /var/run/yourprogram.pid
</span><span class='line'>    exec sudo -u root node ~/location/to/yourapp/app.js &gt;&gt; /var/log/yourapp.sys.log 2&gt;&1
</span><span class='line'>end script
</span><span class='line'>
</span><span class='line'>pre-start script
</span><span class='line'>    # Date format same as (new Date()).toISOString() for consistency
</span><span class='line'>    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" &gt;&gt; /var/log/yourapp.sys.log
</span><span class='line'>end script
</span><span class='line'>
</span><span class='line'>pre-stop script
</span><span class='line'>    #rm /var/run/yourprogram.pid
</span><span class='line'>    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" &gt;&gt; /var/log/yourapp.sys.log
</span><span class='line'>end script</span></code></pre></td></tr></table></div></figure>


<p>一旦設定檔建立後，你可以透過下列指令來確定是否可以work</p>

<p><code>initctl list | grep node</code></p>

<p>會看到下列輸出：</p>

<p><code>yourapp stop/waiting</code></p>

<p>當然一旦作為sevice要進行debug就要將系統輸出訊息內容丟到log，所以還有設置，log輸出位置</p>

<p>上面的步驟完成後，再來就是如何將你本地的程式快速上傳到遠端server，在目前已知道deploy的script語法很多，在這邊我用<code>makefile</code>來進行，當然你的專案大一點可以由CI來handle，不過這邊要說的是概念，所以我們就簡單一點，直接來看程式，makefile檔案內容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>all: restart
</span><span class='line'>
</span><span class='line'>restart: rsync
</span><span class='line'>  ssh -oStrictHostKeyChecking=no root@yourhost "stop yourapp; start yourapp" 2&gt;/dev/null
</span><span class='line'>
</span><span class='line'>rsync: 
</span><span class='line'>  rsync -av ~/projects/yourapp root@yourhost:projects</span></code></pre></td></tr></table></div></figure>


<p>執行步驟白話一點，就是先將檔案上傳到你的遠端伺服器，然後將剛剛完成的service關閉在重新啟動，在這邊透過 rsync</p>

<p>接著在透過 ssh 來重新啟動你剛剛設定的service，如此就完成設定，接著你只要在你的app目錄底下執行<code>make</code>就會自動完成上述步驟，是不是快速又簡單，一點點設定就可以完成，不用再重覆同樣的步驟，做事才會有效率！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/09/node-production-setting/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[mongodb 匯入 csv 方法介紹- 透過mongohub 以及 command]]></title>
<link href="http://smlsun.com/blog/2013/01/05/mongodb-import-csv/"/>
<updated>2013-01-05T11:55:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/05/mongodb-import-csv</id>

      <content type="html"><![CDATA[<p>在使用database 要進行初始資料insert，相信大家在使用時不會想要一筆筆資料慢慢打，最快的方式就是使用大家熟悉的excel，或者csv進行初始資料的建立，之後在用db提供的dataimport工具，將整理好的資料進行匯入，網路上關於ms sqlserver，或是mysql相關資料已經很多，今天要介紹的是如何將cvs的文字資料匯入到mongodb。</p>

<p>首先在開始時我們可以先申請一個免費的mongodb來玩玩，介紹大家一個免費空間又大的線上mongodb網站</p>

<p><a href="https://mongolab.com/welcome/">mongolab</a></p>

<p>提供免費的 500 mb空間，比<a href="https://www.mongohq.com/home">mongohq</a> 大上十倍，非常的夠用了。</p>

<p>接著如果如果要進行CVS匯入我們可以有兩種方式，一種是透過mongodb提供的指令進行匯入，安裝方式可參考下列網址:<a href="http://docs.mongodb.org/manual/installation/">Installing MongoDB</a></p>

<p>範例指令</p>

<div><script src='https://gist.github.com/4452313.js?file='></script>
<noscript><pre><code>mongoimport --host mongolab.com --port 40000 --username user --password db --collection store --db dbname --type csv --file ~/gdata.csv --headerline</code></pre></noscript></div>


<p>可以參考下面網址的個參數說明：<a href="http://docs.mongodb.org/manual/administration/import-export/">Importing and Exporting MongoDB Data</a></p>

<p>另外一個就是使用gui介面進行資料匯入，在這邊使用 <a href="http://mongohub.todayclose.com/">mongohub</a>，介紹可參考 <a href="http://blog.lyhdev.com/2012/03/mongohub-mongodb-mac.html">MongoHub 簡單易用的 MongoDB 圖形化管理工具</a></p>

<p>再來就要介紹如何使用gui進行mongodb的批次cvs資料匯入，可以點選mongohub中你要匯入的collection就是類是一般sql的table，這邊選取的是motostore這個collection，如下圖：</p>

<p><img src="https://lh5.googleusercontent.com/-jg9hJXlb5Ig/UOesHMhFQGI/AAAAAAAALc0/4pAZgjilePU/s739/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-01-05%2520%25E4%25B8%258B%25E5%258D%258812.17.20.jpg" alt="img" /></p>

<p>選取之後在點選上方放大鏡，query那個圖示，會開啟下面的畫面：</p>

<p><img src="https://lh6.googleusercontent.com/-9YnPsJEa2Yk/UOesIOm6_YI/AAAAAAAALc4/EKUPvTuAIyw/s562/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-01-05%2520%25E4%25B8%258B%25E5%258D%258812.19.10.jpg" alt="img" /></p>

<p>點選新開啟的視窗上面的import按鈕，接著選取你要匯入的檔案，type選取cvs，下方Headerline需打勾，表示資料的第一行為欄位邊號，接著點選import按鈕就完成資料的匯入了，是不是很簡單，至少不用去記很多的指令，不過有一個重點！</p>

<blockquote><p>cvs 的檔案編碼請記得要用utf-8</p></blockquote>

<p>如果沒有用utf-8編碼會造成mongohub會跟你說資料匯入成功，但是實際上卻是失敗，我在嘗試匯入時，先用mongohub，結果就一直搞不定，後來改用command的方式才知道原來是檔案編碼錯誤造成無法匯入，後來編碼正確後，再一次使用mongohub就可以正常匯入啦！</p>

<p>匯入cvs的檔案編碼方式要注意阿！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/05/mongodb-import-csv/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[bug tracking system 介紹：使用 github 內建的 Issues]]></title>
<link href="http://smlsun.com/blog/2013/01/02/github-issues/"/>
<updated>2013-01-02T14:30:00+08:00</updated>
<id>http://smlsun.com/blog/2013/01/02/github-issues</id>

      <content type="html"><![CDATA[<p>github 本身原生就支援markdown，當然其內建的 issues tracking 本身也可以用markdown進行編寫，我想這問題回報與描述上會更加的方便，使用上會更加的直覺，這邊將大致介紹一下github issues tracking的使用方式。</p>

<p>首先可以進到下列範例網址：</p>

<p><a href="https://github.com/elimbook/erp/issues">問題追蹤網址</a></p>

<h2>新增/編輯issues</h2>

<p>一開始有說到github是用markdown來進行編輯，如果對於markdown語法有不清楚的可參考下列網址：</p>

<p><a href="http://smlsun.com/blog/2012/12/24/how-to-use-markdown/">快速了解 Markdown</a></p>

<p>也可以在github中的編輯畫面輸入<code>m</code>你將看到下面圖片的markdown的簡單說明：</p>

<p><img src="https://lh4.googleusercontent.com/-cQkMQSAS7hc/UOPzSnAMXoI/AAAAAAAALcQ/FuIGeRI02mY/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.31.36.jpg" alt="img" /></p>

<p>另外如果有圖片的話也可以直接拖拉github將會直接將圖片上傳且自動插入markdown的圖片語法，很方便呢！</p>

<p>若要參照到另一個issue或commit可參考下列語法</p>

<pre><code>* SHA: be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2
* User@SHA ref: mojombo@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2
* User/Project@SHA: mojombo/god@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2
* \#Num: #1
* User/#Num: mojombo#1
* User/Project#Num: mojombo/god#1
</code></pre>

<p>結果可參考github的<a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a>，裡面有更多說明。</p>

<p>在issue登打部分建議如下：</p>

<ul>
<li>title 需明確說明標示問題發生的作業以及問題點</li>
<li>內容部分需有詳細的內容，包括操作步驟與結果，最好可以搭配圖片</li>
</ul>


<p>範例可參考下圖：</p>

<p><img src="https://lh3.googleusercontent.com/-9fuY5CrkDWg/UOPzTRPmdTI/AAAAAAAALcY/s_JDdfJBjwI/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.42.42.jpg" alt="img" /></p>

<p>最後呈現結果如下：</p>

<p><img src="https://lh5.googleusercontent.com/-9l4xBRFTY6k/UOPzT8MaZQI/AAAAAAAALcc/MAtgsAGu4rE/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.43.06.jpg" alt="img" /></p>

<p>新增編輯issue 說明完後再來將針對各種不同的追蹤項目進行說明，在開始追蹤問題時需要事先定義的內容有如下</p>

<ol>
<li>負責人員 Assignee 定義：每個階段皆有負責人負責將該階段排除故需要定義相關的負責人員</li>
<li>標籤 Labels 定義：每個階段的項目定義，比如新問題，開發修改中，測試完成等</li>
<li>里程碑 Milestones 定義：定義每個階段需要完成的項目內容</li>
<li>流程 flow 定義：根據不同狀況定義追蹤流程</li>
</ol>


<h2>負責人員 Assignee 定義</h2>

<ol>
<li>開發者：產品的開發維護人員</li>
<li>測試者：產品測試人員</li>
<li>使用者代表：實際使用系統的人員代表</li>
</ol>


<p>至於要如何指派人員可參考下圖：</p>

<p><img src="https://lh3.googleusercontent.com/-rzlm418XajA/UOPzRUzl1MI/AAAAAAAALcA/D7nUb5b2E1I/s603/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.14.00.jpg" alt="img" /></p>

<p>點選 Assignee 選擇要指派的人員即可</p>

<h2>標籤 Labels 定義</h2>

<p>除了內建的標籤之外，github也允許你使用自定的標籤，來區分每個bug目前的狀態，以便追蹤處理狀況，可以看到如下圖：</p>

<p><img src="https://lh5.googleusercontent.com/-BMNP4URajKY/UOPzO6u6LzI/AAAAAAAALbk/giLoFjLIdJQ/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.02.59.jpg" alt="img" /></p>

<p>若是既有的標籤，可以點標籤的前方的顏色方塊進行編輯，若是新增可點選 <strong>Manage Labels</strong> 新增，在New label name定義標籤名稱，接著定義標籤顏色，在這裡我們可以簡單定義幾個常用得標籤說明如下：</p>

<ul>
<li>新問題：新增issue需定義問題的狀態，需在內容詳細說明操作步驟，與問題發生的環境貨資料狀況</li>
<li>新功能：如果是新增功能，且需在內容詳細說明功能需求</li>
</ul>


<blockquote><p>請記得上面兩點在建立時若確定為很重要的issue皆需要定義完工里程碑</p></blockquote>

<ul>
<li>修正中：一旦問題確認後，一旦進入開發中，需要變更狀態以便了解目前程式人員已在處理</li>
</ul>


<blockquote><p>修正中需要求開發人員回報預計修正完成時間</p></blockquote>

<ul>
<li>修正完成待測試：一旦修正完成，則指派當初建立issue的人員進行測試，需回報測試內容步驟，與測試解果</li>
<li>測試退回：一旦經由測試結果不如預期，怎必須退回重修，同樣需說明測試內容步驟，與結果</li>
<li>嚴重度高：如果會影響日常運作則需標上嚴重度，以便辨識要優先處理</li>
<li>嚴重度低：不影響日常運作，則標上嚴重度低</li>
</ul>


<p>如果普通則不需標上嚴重度，當然可依據不同狀況進行調整。</p>

<p>一旦標籤定義完畢，要將issue打上標籤標記，可參考下圖：</p>

<p><img src="https://lh3.googleusercontent.com/-UpAWej-TnB0/UOPzNx2cbSI/AAAAAAAALbc/vc30JQDjp0o/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.01.15.jpg" alt="img" /></p>

<p>可以看到，可以打上多個標記，只要選取你要的標籤即可。</p>

<h2>里程碑 Milestones 定義</h2>

<p>用來記錄哪幾個問題的預計完成時間，藉此可以控制問題的解決進度，以及完成該里程碑涵蓋的修正與對應的版本皆可在這進行記錄，需要記錄的內容如下：</p>

<ol>
<li>預計版號</li>
<li>首要目的</li>
<li>issue修正範圍</li>
</ol>


<p>往後可以作為change log 的依據，當然軟體本身也要有明確的版號規則，至於如何新增 Milestones 可參考下圖：</p>

<p><img src="https://lh6.googleusercontent.com/-01PZsgoK8eg/UOPzQA0YgfI/AAAAAAAALbw/fEeTF0IZfdk/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.05.45.jpg" alt="img" /></p>

<p>點選Create a new milestone 則會進入到下列畫面：</p>

<p><img src="https://lh6.googleusercontent.com/-2p5kYzjPlFw/UOPzQyPNtxI/AAAAAAAALb4/zEY1ck69NJ8/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.06.55.jpg" alt="img" /></p>

<p>定義好Title 還有敘述 Description 以及里程碑日期就可完成新增，如果要將issue 指派到特定的 milestone 可參考下圖：</p>

<p><img src="https://lh3.googleusercontent.com/-oIElFfXXIW0/UOPzSA9vz4I/AAAAAAAALcI/ckxUv0RKcn4/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.15.44.jpg" alt="img" /></p>

<p>點選上方的 milestone 按鈕將show出目前有定義的 milestone，點選項目即可進行指定</p>

<h2>流程 flow 定義</h2>

<p>在此假設我們的追蹤流程如下，將分為幾種狀況，以及每個狀態負責人員：</p>

<pre><code>新問題(使用者代表) &gt; 問題已確認(開發者) &gt; 問題修正中(開發者) &gt; 修正完成待測試(使用者代表)       
</code></pre>

<p>一旦修正完畢，需交由指派者確認問題修正結果是否確定已在測試環境可進行測試，一旦確認，將進入測試階段，如果測試異常則必須標上測試退回</p>

<pre><code>修正完成待測試(使用者代表)&gt;測試退回(開發者)
</code></pre>

<p>上述循環會一直持續直到修正完成為止，過程中每次退回皆需說明問題發生原因與步驟</p>

<p>最後一旦問題確認已被正確測試正常，怎進行結案，可參考下圖：</p>

<p><img src="https://lh5.googleusercontent.com/-BMNP4URajKY/UOPzO6u6LzI/AAAAAAAALbk/giLoFjLIdJQ/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-01-02+%E4%B8%8B%E5%8D%884.02.59.jpg" alt="img" /></p>

<p>勾選要結案的issues 在點選上方的 Close按鈕就可完成結案，如果結案後又發生問題則可以在點選上方的 closed issues，同樣的可在勾選你要在追蹤的issue 在點選Reopen 即可。</p>

<p>上述就是整個github所提供免費的線上issues track的簡介，是不是簡單又好用，如果你還沒有使用過 bug tracking System，那趕快開始吧，如果你是產品擁有者，在bug滿天飛的情形，更應該好好掌握每隻bug的情形，除了當下問題之外，在久遠的未來發生了問題也可以翻閱過去的紀錄找到一些端倪，總之別怕麻煩，不去記錄才是真正麻煩，因為你將完全沒有根據可以進行問題追蹤…</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2013/01/02/github-issues/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[懶漢的終極型態]]></title>
<link href="http://smlsun.com/blog/2012/12/25/the-ultimate-form-of-slob/"/>
<updated>2012-12-25T13:19:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/25/the-ultimate-form-of-slob</id>

      <content type="html"><![CDATA[<p>今日看了一篇中英文對照新聞，有篇有趣的報導，叫做：</p>

<blockquote><p><a href="http://iservice.libertytimes.com.tw/Service/english/english.php?engno=640137&amp;day=2012-12-22">日本女性穿成人紙尿褲成新潮流</a></p></blockquote>

<p>也算是世界奇觀了，一般得觀念會穿紙尿褲都是因沒辦法控制才需要，但在日本得女性，卻是因為懶惰去穿紙尿褲，只為了節省時間與去洗手間得麻煩，實在是太神了！</p>

<p>應該會想說工作就算了，那跟男朋友出去應該不會穿了吧，錯了～即使是跟男朋友出去也會穿，但是要穿裙子才不會被發現，我的天！</p>

<p>不過這也帶動了另一種經濟，在日本尿布應該賣的比別的國家來的好，因為他們的適用年齡比較廣，實在是太特別了～</p>

<p>難怪文章下了一個標題叫做 『懶漢的終極型態』 這世界真是無奇不有，更何況這狀況是出現在日本。</p>

<p>可以常上來看看，順便學習英文！</p>

<blockquote><p><a href="http://iservice.libertytimes.com.tw/Service/english/">《中英對照讀新聞 總覽</a></p></blockquote>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/25/the-ultimate-form-of-slob/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[how to use git]]></title>
<link href="http://smlsun.com/blog/2012/12/25/how-to-use-git/"/>
<updated>2012-12-25T11:23:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/25/how-to-use-git</id>

      <content type="html"><![CDATA[<p>這篇文章將記錄關於git 使用相關文章，持續更新：</p>

<ul>
<li><a href="http://gogojimmy.net/2012/02/29/git-scenario/">Git 情境劇</a></li>
</ul>


<h2>submodule</h2>

<p>新增 submodule</p>

<pre><code>git submodule add git://github.com/dchelimsky/rspec.git vendor\plugins\rspec
</code></pre>

<p>初始 submodule</p>

<pre><code>git submodule init
git submodule update
</code></pre>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/25/how-to-use-git/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[大陸韓國看台灣-我們應該更有自信]]></title>
<link href="http://smlsun.com/blog/2012/12/25/taiwan-china-Korea/"/>
<updated>2012-12-25T11:14:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/25/taiwan-china-Korea</id>

      <content type="html"><![CDATA[<p>寫這篇文章不只給大家看，也給自己看，因為想創業，所以離開了我熟悉得工作內容，最近在摸索的期間，有時會焦慮，有時候覺得能力不足，看的不夠廣，或是態度還沒準備好，總覺得需要學習的還有很多，除了自身以外，相信現在台灣的年輕人對於台灣環境的憂慮我想大家都不是很看好，不管是經濟，或者是政治，有時候我們也真的不要都看自己人的說詞，也看別人怎麼看台灣，特別台灣媒體政治人物特別喜歡唱衰，應該也是因為沒自信造成的。</p>

<p>先看看韓國人怎麼說，下面的連結：</p>

<blockquote><p><a href="http://cpaper-blog.blogspot.tw/2012/12/life-is-good.html">泡菜與番薯，Life is good？</a></p></blockquote>

<p>我想最近大家都覺得韓國人來勢洶洶，不管在經濟或是偶像娛樂事業，沒錯～在競爭力來看，韓國確實很強，但另一方面，國家人民不太有選擇，因為大財團，還有國家的民族性，讓他們沒有什麼選擇，也因此他們很羨慕台灣的多元性，我們可以選擇我們想要的，如果我們朝韓國的方向前進，其實就是犧牲自由的選擇，之前看過一本書叫做<a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010556027">怪咖時代</a>，裡面有說到因為有選擇權，才會造就更極致的事業，怪咖才能崛起，可以想想如果真的都定型了，我們有有什麼自由意志可言，每個人都往大企業跑，又怎麼會像美國，有這麼多令人讚賞的創意，從韓國人的角度看台灣，其實我們擁有的更加可貴！</p>

<p>再來是從經濟的角度：</p>

<blockquote><p><a href="http://blog.udn.com/sscorp/7150517">給所有台灣人一點自信，台灣的真實地位</a></p></blockquote>

<p>台灣媒體總是喜歡用聳動的標題或是單一的舉證來說明一個事實，有時候不夠客觀，比如說最近常在講，我們是亞洲四小龍之末，但從數據來看，其實台灣還是很有競爭力，從失業率來看，外國動扎兩位數的失業率，在西班牙甚至高於50%，相較起來台灣真的好多了，要是我們總是因為錯誤的報導，認為台灣的環境不好，其實也更間接讓一些有能力的人，認為台灣沒有發展，因此海外人才就不來台灣，我們不只在嚇自己也在嚇別人！其實這樣是不對的，我們應該要更有自信，台灣是寶島不是鬼島，住在上面是寶貴的，不是鬼在住的！勇於接受外來的刺激，跳出舒適圈，之前看到個很不錯的slogan</p>

<blockquote><p>全世界最笨的是每天做一樣的事卻希望有不一樣的未來！</p></blockquote>

<p>共勉～</p>

<p>最後從大陸人的眼光來看台灣</p>

<p><a href="http://www.chinanews.com/tw/2012/12-18/4415974.shtml">大陆人看台湾：建立两岸互信 台湾首先要自信</a></p>

<p>我想這篇文章的重點</p>

<blockquote><p>所有的互信都是從自信開始的，因著自信而願意去主動瞭解對方。與主動的瞭解探尋相比，被動接受的信息往往單一而平面，只有好壞兩個維度的座標</p></blockquote>

<p>在沒有自信的情況下，我們會害怕我們不了解的事物，其實就像前面講得因為沒自信我們害怕了解，只看片面之詞，如果我們有自信，對於一些不實的報導，我們就會比較，我們有這麼差嗎？如果有自信，我們就不會害怕嘗試，害怕失敗，因為有自信，會相信從失敗中我們能夠變得更強！</p>

<p>當然最後還要強調自信並不是要目中無人，自信中帶著謙遜，可以看到成功並且令人尊敬的人仕都有這樣的特質，時時提醒自己：</p>

<blockquote><p>自信中不要忘了謙遜</p></blockquote>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/25/taiwan-china-Korea/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[快速了解 markdown]]></title>
<link href="http://smlsun.com/blog/2012/12/24/how-to-use-markdown/"/>
<updated>2012-12-24T09:21:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/24/how-to-use-markdown</id>

      <content type="html"><![CDATA[<p>markdown 是個很簡單的文章撰寫語法，無論是寫blog，或是寫文件都是很方便快速，透過幾個既定的符號可以讓你很快速的排版，不用在為了因為要寫html特別轉換，透過統一的規範產出物不同格式的文件，下面是官方的網站</p>

<p><a href="http://markdown.tw/">markdown語法說明</a></p>

<p>裡面有很詳盡的介紹，但對於初學者可能雜了點，下面我列出幾個常用的，一旦用熟了進階的就比較能夠理解了：</p>

<ul>
<li><p>行首插入 1 到 6 個 <code>#</code> ，對應到標題 1 到 6 階，例如：</p>

<pre><code>  # 一階
  ## 二階
</code></pre>

<p>  結果如下</p></li>
</ul>


<h1>一階</h1>

<h2>二階</h2>

<ul>
<li><p>允許你只在段落的第一行最前面加上<code>&gt;</code>：</p>

<pre><code>  &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

  &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
  id sem consectetuer libero luctus adipiscing.
</code></pre></li>
</ul>


<p>結果如下</p>

<blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>

<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.</p></blockquote>

<ul>
<li><p>清單標記：</p>

<pre><code>  *   Red
  *   Green
  *   Blue
</code></pre></li>
</ul>


<p>結果如下</p>

<ul>
<li>項目1</li>
<li><p>項目2</p></li>
<li><p>數字清單則使用數字接著一個英文句點：</p>

<pre><code>  1.  Bird
  2.  McHale
  3.  Parish
</code></pre></li>
<li><p>分隔線</p>

<pre><code>  ---
</code></pre></li>
</ul>


<p>結果如下</p>

<hr />

<p>上面是分隔線結果</p>

<ul>
<li><p>斜體</p>

<pre><code>  _斜體_
</code></pre></li>
</ul>


<p>結果如下</p>

<p><em>斜體</em></p>

<ul>
<li><p>強調</p>

<pre><code>  __強調__
</code></pre></li>
</ul>


<p>結果如下</p>

<p><strong>強調</strong></p>

<ul>
<li><p>連結</p>

<pre><code>  [連結名稱](http://連結.網址)
</code></pre></li>
<li><p>圖片</p>

<pre><code>  ![圖片名稱](http://圖片.網址)
</code></pre></li>
</ul>


<p>大致上使用方式就是這樣子囉～</p>

<p>一開始使用，感覺好像很複雜，其實習慣後文章的產出會非常的快！</p>

<p>堅持一下，寫個三四篇看看，你會愛上這樣寫作的方式，像我就是！！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/24/how-to-use-markdown/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[google map 取得經緯度]]></title>
<link href="http://smlsun.com/blog/2012/12/22/google-map-get-geo/"/>
<updated>2012-12-22T15:12:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/22/google-map-get-geo</id>

      <content type="html"><![CDATA[<p>本篇文章說明如何在新版的google很簡單的取得經緯度，步驟如下：</p>

<ul>
<li>進入地圖實驗室</li>
</ul>


<p><img src="https://lh5.googleusercontent.com/-d3GV5cDAViw/UNVdHmqpV9I/AAAAAAAALZ8/YPBXMknoQ7s/s640/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-12-22%2520%25E4%25B8%258B%25E5%258D%25883.10.09.jpg" alt="img" /></p>

<ul>
<li>開啟經緯標記</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/-ChBgulIjT4Y/UNVdLjvDf7I/AAAAAAAALZ4/Y8qRxqssRHI/s774/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-12-22%2520%25E4%25B8%258B%25E5%258D%25883.10.31.jpg" alt="img" /></p>

<ul>
<li>右鍵置放經緯標記</li>
</ul>


<p><img src="https://lh4.googleusercontent.com/-_lZ4QCCfnLw/UNVdMYgtDbI/AAAAAAAALZw/gsdcZ6ajug8/s386/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-12-22%2520%25E4%25B8%258B%25E5%258D%25883.10.52.jpg" alt="img" /></p>

<ul>
<li>複製經緯度</li>
</ul>


<p><img src="https://lh6.googleusercontent.com/-cn0Sz00Dxs8/UNVdNAOwuhI/AAAAAAAALZ0/7keCU2zBwcM/s249/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-12-22%2520%25E4%25B8%258B%25E5%258D%25883.11.08.jpg" alt="img" /></p>

<p>就這麼簡單！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/22/google-map-get-geo/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[如何確定你的slogan(標語)夠吸引人？利用 A/B testing]]></title>
<link href="http://smlsun.com/blog/2012/12/21/ab-testing-seo/"/>
<updated>2012-12-21T10:27:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/21/ab-testing-seo</id>

      <content type="html"><![CDATA[<p>今天來介紹什麼是A/B Testing可以在下面的文章有個初步的認識</p>

<ul>
<li><a href="http://bjack617.wordpress.com/2012/04/25/%E4%BB%80%E9%BA%BC%E6%98%AF-ab-testing/">什麼是 A/B Testing</a></li>
</ul>


<p>就如同文章中有提到的：</p>

<blockquote><p>A/B Testing 的用途是用來測試多種版本的網站編排，讓網站的設計者或經營者能透過對不同版本的網站排版方式來測試那一種是最能達到想要的目的，包括購買、註冊、點閱及下載等不同的目的。</p></blockquote>

<p>大概知道A/B Testing的用意後，下面這篇有影片教學如何做A/B testing，以wordpress利用google所提供的服務 Optimizer，目前該服務已停用，改為納入google analytics，可參考下列文章</p>

<ul>
<li><a href="http://blog.teamtreehouse.com/how-to-do-ab-testing-in-wordpress">How to do A/B Testing in WordPress</a></li>
</ul>


<p>裡面的影片介紹的很詳細，看完後可以大概知道A/B Testing的運作方式，簡單來說就是想要知道怎樣的變動能夠觸使使用者瀏覽網頁時能夠到達你要的頁面。</p>

<p>再舉例來講，你有一個網站，想要知道怎樣的標題可以吸引使用者願意進行註冊，傳統的方式也許三五個人聚在一起覺得哪個比較好就就上放去，但那都是憑感覺，沒有比較客觀的數據，因此才有所謂的A/B Testing</p>

<p>so，google 就提供這樣的工具，讓你可以方便測試分析，至於使用方法簡單來說他可以定義變量，以及希望達到的目標頁面，一旦定義好變量，他會根據登入的使用者ip 的不同，給予不同的呈現，接著在目標頁面也會埋入script 來偵測時不同結果到達目標頁面的可能，並且分析到到達目標頁面的比例</p>

<p>文中有提到：</p>

<blockquote><p>37signals increased their sign-ups by 200% with A/B Testing.</p></blockquote>

<p>經過好的測試與設計確實可以大量提昇服務的吸引力，另外還有下列兩個例子</p>

<ul>
<li><a href="http://www.inside.com.tw/2012/12/20/meet-the-obama-campaigns-250-million-fundraising-platform">歐巴馬募款網站的製作過程</a></li>
</ul>


<p>裡面有提到：</p>

<blockquote><p>接下來，就是微調頁面的各種細節，一共進行了240次a/b測試，也就是說，至少迭代了240個版本。
調整後的頁面，視覺效果和使用者體驗都有了巨大的提升，捐款轉換率因此又提高了49%。</p></blockquote>

<p>可以看到總共進行了240次a/b測試，如果沒有用一些工具，這些改變哪個有效真的很難掌控，只能博杯了&#8230;</p>

<ul>
<li><a href="http://www.bqjournal.com/facebook-pinterest-collections">Facebook推類Pinterest服務Collections</a>，這篇文章所說的我想Facebook也在做類似 A/B Testing 的事情</li>
</ul>


<blockquote><p>比如說 facebook 的這個就是在做類似的測試，「想要」、「保存」、「添加」、「收藏」或者「 我的收藏」，看看哪個話語比較吸引用戶想要收藏圖片</p></blockquote>

<p>如何？希望可以透過這篇文章讓大家大概了解什麼是A/B Testing，以及該如何作 A/B Testing，知道概念後要實際應用應該就有個起頭了，參考看看囉！</p>

<p>之後再來介紹SEO，就是所謂的Search engine optimization，搜尋引擎最佳化，對於如何讓網站能夠更容易被搜尋到的一些介紹。</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/21/ab-testing-seo/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[好文章推薦]]></title>
<link href="http://smlsun.com/blog/2012/12/21/good-article/"/>
<updated>2012-12-21T08:44:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/21/good-article</id>

      <content type="html"><![CDATA[<p>今天拜讀了 <a href="http://pingyeh.blogspot.tw/">Ping不見路</a> 的文章，雖然我不認識他，不過看了幾篇有興趣的文章都很精闢，內容質量高以及邏輯清楚，實在令人佩服，再一次覺得這世界神人之多，且學無止境阿！</p>

<p>下面就列出幾篇我覺得不錯的文章，</p>

<ul>
<li><p><a href="http://pingyeh.blogspot.tw/2011/02/blog-post.html">雲端！雲端！多少文章假汝之名而行</a></p>

<p>  這篇文章用燈泡，與電流之直流電與交流電來說明雲端與網路的關係，我覺得比喻的很好，簡單易懂！</p></li>
<li><p><a href="http://pingyeh.blogspot.tw/2011/09/blog-post.html">悠遊卡改卡　當事人已不是駭客</a></p>

<p>  這篇文章藉由悠遊卡事件說明了駭客（Hacker）和 Cracker 的差別，就像星際大戰裡 Master Yoda 和 Darth Vader 的差別；其中有最後有引用 &#8220;The Jargon File, version 4.4.8&#8221; 中的 Hacker 定義第一條：</p>

<blockquote><p>駭客：享受探索系統細節和延伸系統能力的人，和大多數只想學會夠用功能的人相反。網際網路使用者名詞彙編（RFC1392）更進一步解釋：「因了解系統內部運作方式而喜悅的人，尤其是針對電腦和電腦網路的。」</p></blockquote>

<p>  個人覺得寫的ㄅ棒！</p></li>
<li><p><a href="http://pingyeh.blogspot.tw/2011/10/blog-post.html">超光速粒子　即使證實　也難以撼動相對論</a></p>

<blockquote><p>台灣的媒體都比 BBC 懂相對論？講到光速測量就一定要把相對論拿來挑戰、動搖、推翻？不能平平實實地報導科學家講的話？</p></blockquote>

<p>  最近對於新聞媒體很感冒，不時聽到新聞扭曲事實，抹黑的舉動如我寫的兩篇心得：</p>

<ul>
<li><a href="http://smlsun.com/blog/2012/12/13/news-15k/">關於產業會議的15K</a></li>
<li><a href="http://smlsun.com/blog/2012/12/08/times-chan/">關於陳為廷事件</a></li>
<li>還有最近的 <a href="http://www.facebook.com/notes/liang-yi-chang/%E7%82%BA%E6%B0%A3%E5%80%99%E8%AE%8A%E9%81%B7%E5%8A%AA%E5%8A%9B%E7%9A%84%E6%9C%80%E5%BE%8C%E7%9C%BC%E6%B7%9A/567222686624856">為氣候變遷努力的最後眼淚</a>，關於良伊同學為了台灣爭取聯合國非官方青年聯絡人(Focal Point)的職位，為了氣候變遷發聲遭遇到的種種事情</li>
</ul>


<p>  讓我覺得台灣媒體真的要在進步，學學外國人實事求是的態度，就像<a href="http://smlsun.com/blog/2012/12/18/london-taxi/">外國的計程車司機</a>一樣，工作沒有貴賤，態度很重要！</p></li>
<li><p><a href="http://pingyeh.blogspot.tw/2011/10/tachyon.html">微中子是超光速的 Tachyon 嗎？</a></p>

<p>  這篇個人覺得說明的非常棒，將一般人很難了解的微中子說明的很清楚，其中查了關於Tachyon的解釋</p>

<blockquote><p>Tachyon = 速子(一種假設的快於光速的基本粒子)</p></blockquote></li>
<li><p><a href="http://pingyeh.blogspot.tw/2012/12/vs.html">伶牙利齒 vs. 深厚知識</a></p>

<p>  最後這篇讓我知道名嘴招術：</p>

<ul>
<li>第一招：睡拳。還可以變招為「打電動」</li>
<li>第二招：旺中指。</li>
<li>第三招：揚己輕功、抹異手。</li>
<li>第四招：龍戰於野。</li>
</ul>


<p>  真是太有趣了！不過，我不是兩位當事人，所以未避免因為一篇文章就讓讀的人片面的對一個人有刻板印象，還是請大家讀的時候必須客觀。</p></li>
</ul>


<p>推薦給大家囉！增廣見聞還可以笑一笑，生活才會有趣喔！！</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/21/good-article/"></a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[jekyll invalid us-ascii 處理]]></title>
<link href="http://smlsun.com/blog/2012/12/20/jekyll-invalid-us-ascii/"/>
<updated>2012-12-20T15:28:00+08:00</updated>
<id>http://smlsun.com/blog/2012/12/20/jekyll-invalid-us-ascii</id>

      <content type="html"><![CDATA[<p>今天在用使用 <a href="http://jekyllbootstrap.com/">Jekyll + Bootstrap</a> 架站時，剛好在試文章分類 category 是否可接收中文，結果～叭叭，沒辦法，網頁出現像下面訊息</p>

<h3>invalid byte sequence in US-ASCII</h3>

<p>我想應該因為 Jekyll + Bootstrap 如果有定義分類 category 當他在generate 的時候資料夾就會跟 category 來分類產生的html，所以網址的部份也會變成中文。</p>

<p>試了網路上的方法，也就是在.profile 中加入 utf-8 的編碼方式，還是沒有辦法解決此問題，不過正想說算了就避開使用英文，後來看到有人說上傳的github上後github自動產生的頁面就沒此問題，怪哉！姑且一試，耶～真的可以耶！至少實際上線時是沒問題的，給大家參考，如果有辦法可以解決本機編碼的問題請讓我知道，ok～</p>
<p><a rel="bookmark" href="http://smlsun.com/blog/2012/12/20/jekyll-invalid-us-ascii/"></a></p>]]></content>
    </entry>
  
</feed>
