<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: livecd | 蹤影]]></title>
  <link href="http://smlsun.com/blog/categories/livecd/atom.xml" rel="self"/>
  <link href="http://smlsun.com/"/>
  <updated>2013-08-06T09:55:08+08:00</updated>
  <id>http://smlsun.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[tips: customize live cd]]></title>
    <link href="http://smlsun.com/blog/2013/01/25/customize-live-cd/"/>
    <updated>2013-01-25T10:29:00+08:00</updated>
    <id>http://smlsun.com/blog/2013/01/25/customize-live-cd</id>
    <content type="html"><![CDATA[<p>最近在研究如何製作 live cd 也因為這項研究，讓我更熟悉 linux 的架構，發現一些有用的知識，與 linux 運作的設定，這篇算是筆記，陸續在新增</p>

<ul>
<li><p><code>/etc/skel</code></p>

<p>  在這資料夾下面的檔案，只要當新增使用者時，就會複製一份給新增使用者，當你需要有一些預設設定時很好用，比如說：chrome 要有預設的首頁以及捷徑，還有輸入法預設有哪些等。</p></li>
</ul>


<hr />

<ul>
<li><p><code>/etc/xdg/autostart/</code></p>

<p>  global 自動執行，放在底下的 *.desktop 將會自動執行</p></li>
</ul>


<hr />

<ul>
<li><p><code>~/.config/autostart/</code></p>

<p>  local 自動執行，同 <code>/etc/xdg/autostart/</code>，可搭配 <code>/etc/skel</code> 服用，如果你有每個使用者登入就要執行某些程式的需求</p></li>
</ul>


<hr />

<ul>
<li><p><code>/etc/rc.local</code></p>

<p>  當你登入系統時，希望要執行任何 command 可以在這編輯，比如說：製作 livecd 一開始時是在 command 模式，你想要讓他直接進到 xwindow 通常需要下 startx，此時就可以在這檔案裡編寫指令，讓他自動執行。需要注意的是在這直接執行 <code>startx</code> 將是使用 root 的身分，在 etc 底下都屬於 global</p>

<p>  相關說明：</p>

<ul>
<li><a href="http://linux.vbird.org/linux_basic/0510osloader.php#startup_sysinit">init 處理系統初始化流程 (/etc/rc.d/rc.sysinit)</a></li>
<li><a href="http://linux.vbird.org/linux_basic/0510osloader.php#startup_runlevel">啟動系統服務與相關啟動設定檔 (/etc/rc.d/rc N &amp; /etc/sysconfig)</a></li>
<li><a href="http://linux.vbird.org/linux_basic/0510osloader.php#startup_local">使用者自訂開機啟動程序 (/etc/rc.d/rc.local)</a></li>
</ul>
</li>
</ul>


<hr />

<ul>
<li><p>live cd 啟動後，沒有 gdm 的情況下，自動登入 xwindow</p>

<p>  well，這是特定的議題，在查相關資料時，一度認為要用 <code>/etc/rc.local</code> 來解，但後來發現不適用，因為他是用 root，會造成 chrome 無法開啟，故我需要用一般 user 登入，需要將啟動判斷式改放在 <code>.bash_profile</code></p>

<p>  加入下列語法；</p></li>
</ul>


<p>``` bash
if [ -z "$DISPLAY" ] &amp;&amp; [ $(tty) == /dev/tty1 ]; then</p>

<pre><code>startx
</code></pre>

<p>fi
```</p>

<p>相關說明可以看這：<a href="http://linux.vbird.org/linux_basic/0320bash.php#settings_bashrc">bash 環境設定檔</a></p>

<hr />

<ul>
<li><p><code>locale-gen zh_TW.UTF-8</code></p>

<p>  改變系統語系指令，範例為變更為繁體中文環境</p></li>
</ul>


<hr />

<ul>
<li><p><code>apt-get --yes autoremove</code></p>

<p>  製作 live cd 對於容量要很講究，故要將一些沒有相依不需要的套件進行移除，就可以使用這個指令</p></li>
<li><p>產生 live cd 範例 makefile</p>

<p>  下面是我做出來的 makefile 有需要的就拿去參考吧！</p></li>
</ul>


<p>``` bash
LIVECD_HOME=~/livecd
LIVECD_TMP=/tmp/livecd</p>

<p>ORG_ISO_URL=http://www.ubuntu-mini-remix.org/download/12.10
ORG_ISO_NAME=ubuntu-mini-remix-12.10-i386.iso</p>

<p>CREATE_ISO_NAME=Ubuntu-cusmize-livecd.iso</p>

<p>DEPLOY_LOC=~/
DEPLOY_REMOTE=user@ip:~/</p>

<p>all: clean</p>

<p>clean:</p>

<pre><code>- sudo umount ${ORG_ISO_NAME}
- sudo umount ${LIVECD_TMP}/casper/filesystem.squashfs
- sudo umount ${LIVECD_HOME}/custom/proc/
- sudo umount ${LIVECD_HOME}/custom/sys/
sudo rm -rf ${LIVECD_HOME}
</code></pre>

<p>init: clean</p>

<pre><code>wget -nc ${ORG_ISO_URL}/${ORG_ISO_NAME}
sudo apt-get install squashfs-tools dchroot
- mkdir ${LIVECD_TMP}
- sudo mount -o loop ${ORG_ISO_NAME} ${LIVECD_TMP}
- mkdir -p ${LIVECD_HOME}/cd
rsync --exclude=/casper/filesystem.squashfs -a ${LIVECD_TMP}/ ${LIVECD_HOME}/cd
- mkdir ${LIVECD_HOME}/squashfs  ${LIVECD_HOME}/custom
sudo modprobe squashfs
- sudo mount -t squashfs -o loop ${LIVECD_TMP}/casper/filesystem.squashfs ${LIVECD_HOME}/squashfs/
sudo cp -a ${LIVECD_HOME}/squashfs/* ${LIVECD_HOME}/custom
sudo cp /etc/resolv.conf /etc/hosts ${LIVECD_HOME}/custom/etc/  
</code></pre>

<p>install: init</p>

<pre><code># copy install script 在 install.sh 寫入你需要安裝的套件
sudo chmod +x install.sh
sudo cp install.sh ${LIVECD_HOME}/custom/home/

sudo chroot ${LIVECD_HOME}/custom /home/./install.sh
</code></pre>

<p>build: install</p>

<pre><code>chmod +w ${LIVECD_HOME}/cd/casper/filesystem.manifest
sudo chroot ${LIVECD_HOME}/custom dpkg-query -W --showformat='${Package} ${Version}\n' &gt; ${LIVECD_HOME}/cd/casper/filesystem.manifest
sudo cp ${LIVECD_HOME}/cd/casper/filesystem.manifest ${LIVECD_HOME}/cd/casper/filesystem.manifest-desktop
sudo mksquashfs ${LIVECD_HOME}/custom ${LIVECD_HOME}/cd/casper/filesystem.squashfs
cd ${LIVECD_HOME}/cd ;sudo mkisofs -r -V "Ubuntu-cusmize-livecd" -b isolinux/isolinux.bin -c isolinux/boot.cat -cache-inodes -J -l -no-emul-boot -boot-load-size 4 -boot-info-table -o ~/${CREATE_ISO_NAME} .
</code></pre>

<p>deploy: build</p>

<pre><code>scp ~/${CREATE_ISO_NAME} ${DEPLOY_REMOTE}
</code></pre>

<p>deploy_loc: build</p>

<pre><code>cp ~/${CREATE_ISO_NAME} ${DEPLOY_LOC}
</code></pre>

<p>test:</p>

<pre><code>qemu-system-i386 -cdrom ~/${CREATE_ISO_NAME} -boot d -m 512
</code></pre>

<p>```</p>

<p>其中 install.sh：</p>

<p>``` bash</p>

<h1>!/bin/bash</h1>

<p>mount -t proc none /proc/
mount -t sysfs none /sys/
export HOME=/root</p>

<p>locale-gen zh_TW.UTF-8
update-locale LANG=zh_TW.UTF-8</p>

<p>sudo apt-get update</p>

<p>sudo apt-get --yes install lxde
sudo apt-get --yes install language-support-zh language-pack-gnome-zh<em> ttf-arphic-</em></p>

<p>wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb</p>

<p>sudo dpkg -i ./google-chrome*.deb
sudo apt-get --yes -f install</p>

<p>rm google-chrome-stable_current_i386.deb</p>

<p>sudo apt-get --yes install Leafpad
sudo apt-get --yes install xinit
sudo apt-get --yes install ibus
sudo apt-get --yes install ibus-chewing
sudo apt-get --yes install lxterminal
sudo apt-get --yes install ttf-arphic-uming</p>

<p>sudo apt-get --yes purge xscreensaver</p>

<p>apt-get --yes autoremove
apt-get clean
rm -rf /tmp/*
rm -f /etc/hosts /etc/resolv.conf
umount /proc/
umount /sys/
exit</p>

<p>```</p>

<p>話說：最近越來越 linux 了～</p>
]]></content>
  </entry>
  
</feed>
