<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile | 蹤影]]></title>
  <link href="http://smlsun.com/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://smlsun.com/"/>
  <updated>2013-05-09T21:59:21+08:00</updated>
  <id>http://smlsun.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[agile java with gradle: 使用 gradle 快速開發 java]]></title>
    <link href="http://smlsun.com/blog/2012/12/06/agile-java-with-gradle/"/>
    <updated>2012-12-06T18:04:00+08:00</updated>
    <id>http://smlsun.com/blog/2012/12/06/agile-java-with-gradle</id>
    <content type="html"><![CDATA[<p>以我過往開發java的經驗，總是離不開eclipse，每次要開發新專案，總是要設置一次eclipse的classpath</p>

<p>不然就是共同開發時，可能因為夥伴沒有上傳相依套件，造成編譯失敗</p>

<p>又或者自己去找缺的套件，好死不死版本不對造成程式異常</p>

<p>種種開發java遇到的問題總是困擾著我，又因為這樣浪費的很多時間～</p>

<hr />

<p>怎麼辦！？介紹大家一帖好藥</p>

<h2>Gradle</h2>

<p>之前就有介紹過他，請看我的<a href="http://smlsun.com/slides/java-with-node.html">slide</a></p>

<p>今天在開發一個小程式，索性就不用eclipse，也不去網路上下載套件，將程式寫好後放到gradle的編譯路徑</p>

<p>然後編輯build.gradle，內容如下</p>

<p>``` groovy
apply plugin: 'java'
apply plugin: 'eclipse'</p>

<p>repositories {</p>

<pre><code>mavenCentral()
</code></pre>

<p>}</p>

<p>dependencies {</p>

<pre><code>compile group: 'com.google.zxing', name: 'javase', version: '2.1'
compile group: 'net.sf.jasperreports', name: 'jasperreports', version: '5.0.0'
compile group: 'com.lowagie', name:'itext', version:'2.1.7'
</code></pre>

<p>}</p>

<p>```</p>

<p>可以看到我用到三個套件，分別是javase，jasperreports以及itext，如果你要查套件對應的group以及version可上下列網址查詢：</p>

<p><a href="http://search.maven.org/">maven Central Repository</a></p>

<p>輸入你要找的套件名稱，就會列出相關的資訊。</p>

<p>接著我們只要在Terminal鍵入下列指令：</p>

<p><code>gradle build jar</code></p>

<p>gradle 就會進行 java compile，並且把熱熱的class馬上幫你包成jar讓你吃，ㄜ，不是！是讓你用～</p>

<p>就是這麼簡單，如果你還很嫩，離不開eclipse，別擔心，一句指令讓你使用IDE!</p>

<p><code>gradle eclipse</code></p>

<p>這時候gradle會根據你設定的 dependencies 幫你把classpath建好，方便吧！</p>

<p>剛剛提到多人開發，缺套件，或者抓錯版本的問題將一去不復返，任何人拿到程式碼，編譯出來的東西都會是一樣，將不再有缺套件沒辦法編譯的問題，可以輕省快速的開發java，以及處理繁瑣的編譯包jar步驟，更快的驗證寫出來的程式，正是敏捷開發的精神!</p>

<p>如何？還不趕快試試看阿！</p>
]]></content>
  </entry>
  
</feed>
