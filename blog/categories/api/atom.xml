<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: api | 蹤影]]></title>
  <link href="http://smlsun.com/blog/categories/api/atom.xml" rel="self"/>
  <link href="http://smlsun.com/"/>
  <updated>2013-05-08T11:53:49+08:00</updated>
  <id>http://smlsun.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[extjs: DOM、Element 以及 Component 的差別]]></title>
    <link href="http://smlsun.com/blog/2013/02/18/extjs-dom-element-component/"/>
    <updated>2013-02-18T12:32:00+08:00</updated>
    <id>http://smlsun.com/blog/2013/02/18/extjs-dom-element-component</id>
    <content type="html"><![CDATA[<p>資料來源：</p>

<ul>
<li><a href="http://hi.baidu.com/andriond/item/757d24dcb1b8f139e3108f8a">理解Html DOM、Ext Element及Component</a></li>
</ul>


<p>學習及應用 extjs，需要理解 Html DOM、Ext Element及Component 三者的區別。extjs 是 Wed 前端框架，基於標準 W3C 構建設的，使用到的都是HTML、CSS、DIV 等相關技術。無論元件有多少屬性、還是事件、方法等，其最終都會轉化為 HTML 在瀏覽器上顯示出來，而每一個 HTML 頁面都有 DOM，瀏覽器中的所有內容都有相應的 DOM，動態改變頁面的內容正是透過 javascript 來操作 DOM 進行實現。</p>

<p>而在 extjs 中就有個專門用來處理 DOM 的類別 ...</p>

<h2>Ext.DomHelper</h2>

<p>DOM其實就是 W3C 標準定義的原始 API，在 extjs 中對 dom 進行強化，製作了 <a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext.DomHelper">Ext.DomHelper</a></p>

<p>在官方 API 中可以看到該類別屬於 singleton，所謂的 singleton 就是所謂的整個程式在運行時只有一份，且不需宣告即已被實體化，官方文件中的範例：</p>

<pre><code>var dh = Ext.DomHelper; // create shorthand alias
// specification object
var spec = {
    id: 'my-ul',
    tag: 'ul',
    cls: 'my-list',
    // append children after creating
    children: [     // may also specify 'cn' instead of 'children'
        {tag: 'li', id: 'item0', html: 'List Item 0'},
        {tag: 'li', id: 'item1', html: 'List Item 1'},
        {tag: 'li', id: 'item2', html: 'List Item 2'}
    ]
};
var list = dh.append(
    'my-div', // the context element 'my-div' can either be the id or the actual node
    spec      // the specification object
);
</code></pre>

<p>可以看到 <code>var dh = Ext.DomHelper;</code> 並未透過 new 來進行建立實體，而在 Ext.DomHelper 特別針對了原生 javascript 的 Insertion methods 進行封裝，如下：</p>

<ul>
<li>append</li>
<li>insertBefore</li>
<li>insertAfter</li>
<li>overwrite</li>
<li>createTemplate</li>
<li>insertHtml</li>
</ul>


<p>當然 extjs 不只是單純的進行封裝那麼簡單，他還避免了一些在效能上容易造成問題的地方，比如說在我另一篇文章<a href="http://smlsun.com/blog/2013/02/01/javascript-performance/">Javascript: Performance &amp; Tip</a> 有提到的 『9. DOM』 使用 DocumentFragment 避免 ReFlow 的問題，在 extjs 中已採用此作法，可以從原始碼<a href="http://docs.sencha.com/ext-js/3-4/source/DomHelper-more.html#Ext-DomHelper">DomHelper-more</a> 中的 <code>createDom</code> 看到 <code>el = doc.createDocumentFragment();</code> 使用了 DocumentFragment。</p>

<p>而DOM是W3C標準定義的原始API，如果我們要取得 dom 可以透過 <a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext-method-getDom">Ext.getDom(el)</a>，除了用 dom id 來索引之外，也可以傳入 Element，如：</p>

<pre><code>// gets dom node based on id
var elDom = Ext.getDom('elId');
// gets dom node based on the dom node
var elDom1 = Ext.getDom(elDom);

// If we don't know if we are working with an
// Ext.Element or a dom node use Ext.getDom
function(el){
    var dom = Ext.getDom(el);
    // do something with the dom node
}
</code></pre>

<p>接著來看在 extjs 對 DOM 進行封裝後的物件帶來什麼樣的功能 ...</p>

<h2>Ext.Element</h2>

<p>Ext.Element 是Ext的底層API，主要是由Ext或自定義組件來進行呼叫。並且將 DOM 進行封裝，使用方式如下：</p>

<pre><code>// by id
var el = Ext.get("my-div");

// by DOM element reference
var el = Ext.get(myDivElement);
</code></pre>

<p>可以看到只要透過 <a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext-method-getDom">Ext.get</a> 取得的物件，將會作為 Ext.Element 回傳。</p>

<p>透過 extjs 將 DOM 封裝為 Ext.Element，通過其操作 DOM 來實現頁面的效果顯示，可以方便做到若要把頁面中的某一個節點移到其它位置，要給某一個節點添加陰影效果，要隱藏或顯示某一個節點等，可以很輕易的執行相關的動畫特效，主要是因為在 Ext.Element 中包含了專門處理特效的類別：<a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext.Fx">Ext.Fx</a>，而以往都需要通過幾句 javascript 才能完成。舉例來說，下面這段取得 DOM 的語法：</p>

<pre><code>var el = Ext.get("my-div");

// no animation
el.setWidth(100);
</code></pre>

<p>只是單純的將寬度設為 100 ，若要有類似特效的效果，很簡單：</p>

<pre><code>// default animation
el.setWidth(100, true);
</code></pre>

<p>修改為上面的程式碼即可，詳細可參照 <a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext.Element">API-Ext.Element</a></p>

<p>因此，Ext 在 DOM 的基礎上創建了 Ext.Element，可以使用 Element 來包裝任何 DOM；Element 類別中添加了一系列快捷、簡便的實用方法。其中對於事件上的使用，不像 Component 中的事件是屬於 Ext events，在 Element 中的事件是屬於 browser events，在 extjs 官方 api 中有提到：</p>

<blockquote><p>Note that the events documented in this class are not Ext events, they encapsulate browser events.</p></blockquote>

<p>其中因為是屬於原生的 browser events 所以不是所有的事件在較舊的 browser 中都有支援，不過如果是屬於 Ext events 的範圍則都有支援。如官方所言：</p>

<blockquote><p>Some older browsers may not support the full range of events. Which events are supported is beyond the control of ExtJs.</p></blockquote>

<p>extjs 實作了 Element 來對原生的 dom 操作進行了強化，並且透過 Element 的使用可以不必擔心跨瀏覽器的相容性，解決前端令人困擾的問題，但對於終端用戶來說，僅僅有Element是不夠的，也因此 extjs 最強大的部份就是 ...</p>

<h2>Ext.Component</h2>

<p>假設我們需要在開發時要顯示一個表格、樹狀結構或者彈出一個視窗等，為了方便建立相關的元件，除了 Element 以外，Extjs 還建立了一系列的前端顯示元件 Component，我們在撰寫程式時，只要使用這些組件 Componet 即可實現相關數據展示及交互等，而 Component 是較高層次的抽象，每一個組件在渲染 render 的時候，都會依次通過 Element、DOM 來生成最終的頁面效果。</p>

<p>在Ext中，組件 render 以後可以通過存取 Component 的 properties <a href="http://docs.sencha.com/ext-js/3-4/#!/api/Ext.Component-property-el">api-el</a> 屬性來得到 Component 對應的 Element ，通過存取 Element 的 dom 屬性可以得到其下面的 DOM。</p>

<p>其中如果要取得某元件可以透過 Ext.getCmp 來得到，相關詳細說明可參考我的另一篇文章：<a href="http://smlsun.com/blog/2013/02/05/extjs-component/">Extjs: Component 的使用，找尋 Parent &amp; Child</a></p>

<p>而下面範例說明實際上的使用狀況：</p>

<pre><code>var view=new Ext.Viewport();                
//建立了一個組件 Component 
view.el.setOpacity(.5);                     
//呼叫 Element 的 setOpacity 方法
view.el.dom.innerHTML="Hello Ext";  //透過 Element 的 dom 屬性操作 DOM
</code></pre>

<p>以及如何分別取得 dom、element 以及 component</p>

<pre><code>var win=new Ext.Window({id:"win1",title:"my window",width:200,height:200}); 
win .show(); 
var c=Ext.getCmp("win1");           //得到 win 
var e=Ext.get("win1");              //根據 id 得到 win 相應的 Element 
var dom=Ext .getDom("win1");        //得到 id 為 win1 的 DOM 節點
</code></pre>

<p>若要進一步了解 extjs 的 Class Diagram 可參考下列網址：<a href="http://d.hatena.ne.jp/Tommy1/searchdiary?word=%2A%5BExtJS%5D">Ext JS 3.0 - Class Diagram</a></p>

<h2>深入 extjs</h2>

<p>如果要想深入應用 Ext，那麼閱讀Ext項目的原始碼是必要的，該原始碼非常值的學習，一些 js 技巧，以及應該要避免的 js 陷阱都有考慮到，透過閱讀原始碼可以更加深刻的了解 javascript 的程式開發，其包含了很多精巧的 js 開發與設計模式。在使用Ext的過程中，需要 extend extjs 的元件作為自定義的元件時，如何實作有時就要從原始碼找答案。</p>

<p>當然 Ext 的原始碼是很龐大的，並不需要從頭開始看，建議可以從元件 Component.js、容器 Container.js 以及 Panel.js；而核心中的 Element.js 以及 Ext.js 等也是蠻重要的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll Liquid reference]]></title>
    <link href="http://smlsun.com/blog/2012/12/19/Jekyll-liquid-reference/"/>
    <updated>2012-12-19T08:59:00+08:00</updated>
    <id>http://smlsun.com/blog/2012/12/19/Jekyll-liquid-reference</id>
    <content type="html"><![CDATA[<p>最近在用Jekyll為base的作一些靜態網站，他算是一個很輕省，並且可以快速完成網站的好工具，可以看看友站的介紹<a href="http://blog.lyhdev.com/2012/02/jekyll-github-pages.html">使用 Jekyll 與 GitHub Pages 架站</a>，幾個步驟並且使用免費的github就可以讓你有個網站的雛形，當然只有這樣還不夠，當你需要客製時，就必須要知道如何操作該工具運作，所以整理這篇，給大家參考，至少是個起頭方向。</p>

<p>為了避免浪費太多摸索時間，如果你有興趣想要使用這工具，建議大家先大概瀏覽一下下面的文件，有個印象後在去操作，整個才會比較速西(台語)～</p>

<ul>
<li>官方網站：<a href="http://liquidmarkup.org/">Liquid</a></li>
<li>wiki：<a href="https://github.com/mojombo/jekyll/wiki">Liquid wiki</a></li>
</ul>


<p>節錄幾個我覺得比較重要的章節</p>

<ul>
<li>markdown文檔檔頭的說明：<a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter">YAML Front Matter</a></li>
<li>各種參數讀取方式：<a href="https://github.com/mojombo/jekyll/wiki/Template-Data">Template Data</a></li>
<li><p>設計人員參考手冊：<a href="https://github.com/shopify/liquid/wiki/liquid-for-designers">Liquid for Designers</a></p>

<p>  包含比如說replace這樣替換字元的說明，還有一些常用的tag說明</p></li>
<li><p>開發人員參考手冊：<a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Programmers">Liquid for Programmers</a></p>

<p>  如果你有看我另一篇文章<a href="http://smlsun.com/blog/2012/11/29/octopress-slide-advanced-More/">More Advanced octopress with Slide Features</a>，裡面自定tag 與 block 的作法在這邊有詳細說明</p></li>
<li><p>Jekyll <a href="https://github.com/mojombo/jekyll/wiki/liquid-extensions">Liquid Extensions</a></p>

<p>  Jekyll 使用 Liquid 來處理 templates，這裡列出一些除了標準 Liquid 有提供的功能外，延伸的部份，比如說裡面有提到的 Post Url，可以用 <code>post_url 2010-07-21-name-of-post</code>取得文章連接。</p></li>
</ul>


<p>試試看，Jekyll Liquid 使用起來真的很方便，如果你要快速架站，這個工具可以幫上你的忙</p>

<h3>Have Fun!!</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[google api 的使用簡介-map & picasa]]></title>
    <link href="http://smlsun.com/blog/2012/12/19/google-api/"/>
    <updated>2012-12-19T08:20:00+08:00</updated>
    <id>http://smlsun.com/blog/2012/12/19/google-api</id>
    <content type="html"><![CDATA[<p>最近剛好在做一個房仲網站，有用到 google map api，以及要動態嵌入picasa的圖片依據狀況改變圖片大小，找到一些參考資料，整理上來給大家參考</p>

<h2>google map</h2>

<h3>大家愛吃的泡麵版:</h3>

<ul>
<li><p>如果你要嵌入map地圖請參考下列網址</p>

<p>  <a href="http://support.google.com/maps/bin/answer.py?hl=zh-Hant&amp;answer=72644">在網站或網誌中嵌入地圖</a></p></li>
</ul>


<p>效果如下：</p>

<iframe width="640" height="480" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com.tw/maps?f=q&amp;source=s_q&amp;hl=zh-TW&amp;geocode=&amp;q=%E5%8F%B0%E5%8C%97%E5%B8%82%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;aq=&amp;sll=23.48575,119.49965&amp;sspn=8.347012,9.876709&amp;t=m&amp;brcurrent=3,0x3442a9b1907a9407:0x10fa075eccd0dd7c,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;ll=25.026428,121.512823&amp;spn=0.037331,0.054932&amp;z=14&amp;iwloc=A&amp;output=embed"></iframe>


<br /><small><a href="https://maps.google.com.tw/maps?f=q&amp;source=embed&amp;hl=zh-TW&amp;geocode=&amp;q=%E5%8F%B0%E5%8C%97%E5%B8%82%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;aq=&amp;sll=23.48575,119.49965&amp;sspn=8.347012,9.876709&amp;t=m&amp;brcurrent=3,0x3442a9b1907a9407:0x10fa075eccd0dd7c,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E6%B1%80%E5%B7%9E%E8%B7%AF%E4%B8%80%E6%AE%B5354%E8%99%9F&amp;ll=25.026428,121.512823&amp;spn=0.037331,0.054932&amp;z=14&amp;iwloc=A" style="color:#0000FF;text-align:left">檢視較大的地圖</a></small>


<p>簡單吧！感謝google大神～</p>

<h3>下面是給愛自己煮的geek:</h3>

<ul>
<li><a href="http://my-web-design.blogspot.tw/2007/09/google-maps-api.html">基本的使用介紹</a></li>
<li><p>如果你要嵌入地圖資訊可用下列網站產生</p>

<p>  <a href="http://www.solvium.de/static-map/">google map 嵌入網站程式碼產生器</a></p></li>
<li><p>如果要查詢所在位置的坐標可使用下列網址，之前在<a href="http://smlsun.com/blog/2012/12/06/ireport-map-component/">Introduction Ireport Component: Map 地圖</a>有介紹過</p>

<p>  <a href="http://www.agenciacreativa.net/coordenadas_google_maps.php">座標查詢網址</a></p></li>
<li><p>更詳細的使用說明可以參考官方文件說明</p>

<p>  <a href="https://developers.google.com/maps/documentation/javascript/?hl=zh-TW">官方google map api 文件</a></p></li>
</ul>


<h2>google picasa</h2>

<h3>大家愛吃的泡麵版：</h3>

<p>如果你要分享picasa上面的影像可以參考下列網址操作</p>

<ul>
<li><a href="https://support.google.com/picasa/answer/66969/?hl=zh-Hant&amp;">內嵌相簿、圖片和投影播放</a>，效果如下
<embed type="application/x-shockwave-flash" src="https://picasaweb.google.com/s/c/bin/slideshow.swf" width="800" height="533" flashvars="host=picasaweb.google.com&hl=zh_TW&feat=flashalbum&RGB=0x000000&feed=https%3A%2F%2Fpicasaweb.google.com%2Fdata%2Ffeed%2Fapi%2Fuser%2F114562460176368030377%2Falbumid%2F5810278785625170577%3Falt%3Drss%26kind%3Dphoto%26authkey%3DGv1sRgCIqtvMXakpDcSw%26hl%3Dzh_TW" pluginspage="http://www.macromedia.com/go/getflashplayer"></embed></li>
</ul>


<p>差就差在是用flash作的，如果你不 care iphone的用戶(沒有flash)，這應該可以幫你節省維護照片(以資料夾為單位)，以及將照片放在web site的時間(複製連接)，picasa就可以很方便管理你的照片，</p>

<h3>更正：原來有人提出iphone，使用picasa slide 的解決方案了如下：</h3>

<h4><a href="http://www.jaillon.com/blog/2010/06/04/how-to-make-picasa-flash-based-slideshow-iphone-friendly/">How to make Picasa flash-based slideshow iPhone-friendly</a></h4>

<p>``` javascript</p>

<script language=javascript>
if((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i)) || (navigator.userAgent.match(/iPad/i)))
{
document.write(‘<a href=”[URL to slideshow link]“><img src=”[URL to an image from the slideshow] width=”600″ /></a>’);
}
else
{
document.write(‘[Code provided by Picasa - Click on "Embed Slideshow" link]‘);
}
</script>


<p>```</p>

<p>在介紹一個好工具，很簡單使用</p>

<p><a href="http://www.slidemypics.com/">Free HTML5 Slideshows</a></p>

<p>效果如下：</p>

<ul>
<li><p><iframe width="526" height="352" frameborder="0" src="http://files.slidemypics.com/app/js/iframe.html?bg_color=1f1f1f&amp;hash=a75a4cce696c1840e0ee1b5ba1054593&amp;r=0.5629955572076142"></iframe></p></li>
<li><p><iframe width="526" height="352" frameborder="0" src="http://files.slidemypics.com/app/js/iframe.html?bg_color=1f1f1f&amp;hash=9a4b9dcfe243bf7c123dcde7a1054638&amp;r=0.8656736903358251"></iframe></p></li>
<li><p><iframe width="526" height="352" frameborder="0" src="http://files.slidemypics.com/app/js/iframe.html?bg_color=1f1f1f&amp;hash=0379d2806253627616f18543a1054903&amp;r=0.36253471905365586"></iframe></p></li>
</ul>


<h3>geek最愛的自己煮版：</h3>

<ul>
<li><p>用restful的方式來操作圖片的產生，如果你是要用html5 image slide 這就很好用，你不會想要原始大小跟縮圖都自己重覆貼連結的</p>

<p>  <a href="http://akr.tw/2012/04/picasa-url-parameters/">Picasa（Google+）圖片外連的 URL 參數整理</a></p></li>
</ul>


<hr />

<p>其實只要善用網路上的工具真的可以節省很多時間，使用起來也不麻煩，甚至出奇的簡單，只是不知道而已，網路的世界需要大家一起探索，如果有不錯的工具，也別忘了推薦給大家，let me know,OK!</p>

<p>最後還是要感謝google，幫我節省這麼多時間，雖然我沒有像google那麼神通廣大，希望能幫助到來參觀的讀者囉！</p>
]]></content>
  </entry>
  
</feed>
