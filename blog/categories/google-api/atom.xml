<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: google api | 蹤影]]></title>
  <link href="http://smlsun.com/blog/categories/google-api/atom.xml" rel="self"/>
  <link href="http://smlsun.com/"/>
  <updated>2013-05-09T22:18:45+08:00</updated>
  <id>http://smlsun.com/</id>
  <author>
    <name><![CDATA[smlsun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScript 存取 google spreadsheets 試算表]]></title>
    <link href="http://smlsun.com/blog/2013/02/04/google-spreadsheets-connect/"/>
    <updated>2013-02-04T16:34:00+08:00</updated>
    <id>http://smlsun.com/blog/2013/02/04/google-spreadsheets-connect</id>
    <content type="html"><![CDATA[<p>google spreadsheets，也就是 google doc 裡面的 excel，對於 excel 的操作相信大家一定不陌生，如果有寫過一些程式，或許有寫過將 excel 當做 database 進行增修改查的動作。</p>

<p>這篇所要介紹的也就是如何存取 google spreadsheets 進行資料的操作，如果你需要一個快速且容易維護的資料庫，那 google spreadsheets 非常適合，將透過 google 所提供的 Visualization API 進行，下面將對幾個重點部分進行介紹</p>

<h2>query Language</h2>

<ul>
<li><p><a href="https://developers.google.com/chart/interactive/docs/querylanguage?hl=zh-TW#Setting_the_Query_in_the_Data_Source_URL">Query Language Reference</a></p>

<p>  google 官方 query api 裡面有關於查詢語法的說明，基本上就像在下查詢 sql 一樣，如果有操作過 sql 語法，非常好理解。</p></li>
</ul>


<h2>publish spreadsheets</h2>

<ul>
<li><p><a href="http://blog.ericsk.org/archives/1417">JavaScript 存取 Google 試算表的資料</a></p>

<p>  這篇有介紹存取方式，以及如何將你的 spreadsheets Publish 以便讓 Visualization API 能夠存取</p></li>
</ul>


<h2>新增 spreadsheets Records</h2>

<p>google Visualization API 無法讓你進行 <strong>新增</strong> 所以如果你需要新增資料，建議使用:</p>

<p><a href="http://support.google.com/drive/bin/answer.py?hl=zh-Hant&amp;answer=87809">Google 表單
</a></p>

<h2>查詢 spreadsheets</h2>

<p>查詢的部份就是重頭戲啦，從範例來看會比較快一點理解：</p>

<p>sample data:</p>

<p><img src="https://lh3.googleusercontent.com/-v-fjMIfNUpU/UQ8hUW60DcI/AAAAAAAALhQ/TjlxGqTLGt0/s604/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7+2013-02-04+%E4%B8%8A%E5%8D%8810.46.55.jpg" alt="image" /></p>

<p>範例程式：</p>

<p>``` javascript
// 讀取店家資訊以及地理位置，並且透過 createMarker 將位址加入到 map 裡</p>

<p>// 載入 Visualization API
var query =null;
$(function(){</p>

<p>// key 是假的，請使用你的 key</p>

<pre><code>var URL = 'http://spreadsheets.google.com/tq?key=0AsXj_vRMyOYyk5OXdKRlJXdGZ1FZU3FXRjl6E#gid=0';
  google.load('visualization', '1',
      {'packages': ['table']});
query = new google.visualization.Query(URL);
</code></pre>

<p>});</p>

<p>function queryData(queryStr,createMarker){</p>

<pre><code>query.setQuery("select B,C,D,E,F where H='Y' "+queryStr);

query.send(function(resp){
  if (!resp.isError()) {
    var dataTable = resp.getDataTable();
    var jsonData = JSON.parse(dataTable.toJSON());
    var len = jsonData.rows.length;

        for (var i = 0; i &lt; len; ++i) {
          var row = jsonData.rows[i];

            var markConfig=new Object();
            markConfig.latitude=row.c[3].v;
            markConfig.longitude=row.c[4].v;
            markConfig.address=row.c[2].v;
            markConfig.name=row.c[0].v;
            markConfig.description=row.c[1].v;

            createMarker(markConfig);
        }
    }
});
</code></pre>

<p>}
```
非常簡單，應該也淺顯易懂，幾個重點：</p>

<ol>
<li>在 query 部分，沒辦法使用 column Name，只能使用如 samle 圖片中的 A、B、C…</li>
<li>相同查詢條件下，無法連續查詢，甚至也不會 response records，舉例來說，<code>select B,C,D,E,F where H='Y'</code> 這查詢下第一次 ok，但第二次就會沒有反應，所以在處理上，需檢查查詢條件是否與上次相同，如相同則不需再查，當然也許是可行的，但以我目前測試的結果是這樣</li>
</ol>


<p>如果你要做一個簡單問卷，或是購買清單之類的應用，相信 google spreadsheets 是個不錯的選擇，夠簡單，且輔助 google 表單，可以很快速的完成資料輸入的頁面，查詢上也不複雜，就是幾個實用上要注意的額外處裡一下，希望可以幫有需要的人解省一些時間囉！</p>
]]></content>
  </entry>
  
</feed>
